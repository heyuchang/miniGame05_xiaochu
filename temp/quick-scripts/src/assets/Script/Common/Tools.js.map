{"version":3,"sources":["assets\\Script\\Common\\Tools.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Global, {ExportData} from \"./Global\";\r\nimport LoadMgr from \"./manage/LoadMgr\";\r\nimport CacheMgr from \"./manage/CacheMgr\";\r\nimport GameLogMgr from \"./manage/GameLogMgr\";\r\nimport JiuWuSDK from \"../SDK/JiuWuSDK\";\r\nimport Game from \"../Scene/Game\";\r\nimport PanelMgr, {Layer} from \"./manage/PanelMgr\";\r\nimport ShortageView from \"../Moudle/View/ShortageView\";\r\nimport isNumber = cc.js.isNumber;\r\nimport QgNative from \"./manage/Api/QgNative\";\r\nimport LogMgr from \"./LogMgr\";\r\nimport NativeView from \"../Moudle/View/NativeView\";\r\nimport QgRewardedAd from \"./manage/Api/QgRewardedAd\";\r\nimport QgIntersAd from \"./manage/Api/QgIntersAd\";\r\nimport AudioMgr from \"./manage/AudioMgr\";\r\n\r\nexport default class Tools {\r\n\r\n    public static subStr(str, n) {\r\n        let r = /[^\\x00-\\xff]/g;\r\n        if (str.replace(r, \"mm\").length <= n) {\r\n            return str;\r\n        }\r\n        let m = Math.floor(n / 2);\r\n        for (let i = m; i < str.length; i++) {\r\n            if (str.substr(0, i).replace(r, \"mm\").length >= n) {\r\n                return str.substr(0, i) + \"...\";\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 短震动\r\n     * light  轻震动\r\n     * medium 中震动\r\n     * heavy  重震动\r\n     */\r\n    public static vibrateShort(type: string = 'heavy', number: number = 10) {\r\n        // @ts-ignore\r\n        if (!window.qg) {\r\n            return\r\n        }\r\n        for (let index = 0; index < number; index++) {\r\n            // @ts-ignore\r\n            qg.vibrateShort();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 短震动\r\n     */\r\n    public static vibrateLong() {\r\n        // @ts-ignore\r\n        if (!window.qg) {\r\n            return\r\n        }\r\n        // @ts-ignore\r\n        qg.vibrateLong();\r\n    }\r\n\r\n    //判断一个值是否在一个数组中\r\n    public static JudgeValueInArr(value: any, arr: Array<any>) {\r\n        let flag = false\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === value) {\r\n                flag = true\r\n                break\r\n            }\r\n        }\r\n        return flag\r\n    }\r\n\r\n    /**\r\n     * 对象深拷贝\r\n     * @param obj\r\n     */\r\n    public static deepClone(obj) {\r\n        try {\r\n            return JSON.parse(JSON.stringify(obj));\r\n        } catch (e) {\r\n            return obj;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取整数随机值\r\n     * @param maxValue\r\n     * @return [0, max)\r\n     */\r\n    public static getRandomMax(maxValue: number) {\r\n        return Math.floor(Math.random() * maxValue)\r\n    }\r\n\r\n    /**\r\n     * 获取数组随机值\r\n     * @param array\r\n     */\r\n    public static getRandomByArray(array: any) {\r\n        try {\r\n            return array[this.getRandomMax(array.length)];\r\n        } catch (e) {\r\n            GameLogMgr.error('获取数组随机值异常', e);\r\n        }\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * 获取整数随机值\r\n     * @param minValue\r\n     * @param maxValue\r\n     * @return [min, max)\r\n     */\r\n    public static getRandom(minValue: number, maxValue: number): number {\r\n        return Math.floor(Math.random() * (maxValue - minValue) + minValue);\r\n    }\r\n\r\n    /**\r\n     * 获取随机值\r\n     * @param minValue\r\n     * @param maxValue\r\n     * @return (min, max]\r\n     */\r\n    public static getRealRandom(minValue: number, maxValue: number): number {\r\n        return Math.random() * (maxValue - minValue) + minValue;\r\n    }\r\n\r\n    public static sort(arr: any[], begin: number = 0, end: number = arr.length): Array<number> {\r\n        if (end <= begin)\r\n            return arr;\r\n        let i = begin;\r\n        let j = end;\r\n        let key = arr[begin].sort;\r\n        while (true) {\r\n            while (true) {\r\n                if (i == j) break;\r\n                if (arr[j].sort < key) {\r\n                    let temp = arr[j];\r\n                    arr[j] = arr[i];\r\n                    arr[i] = temp;\r\n                    break;\r\n                }\r\n                j--;\r\n            }\r\n            while (true) {\r\n                if (i == j) break;\r\n                if (arr[i].sort > key) {\r\n                    let temp = arr[i];\r\n                    arr[i] = arr[j];\r\n                    arr[j] = temp;\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n            if (i == j)\r\n                break;\r\n        }\r\n        if (end - j > 1) {\r\n            arr = Tools.sort(arr, j + 1, end);\r\n        }\r\n        if (i - begin > 1) {\r\n            arr = Tools.sort(arr, begin, i);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 快速排序导出信息:\r\n     * @param arr 需要进行快速排序的数组\r\n     * @returns {*[]|*}\r\n     */\r\n    public static quickExportSort(arr: ExportData[]) {\r\n        arr.sort(() => {\r\n            return 0.5 - Math.random()\r\n        })\r\n        if (CacheMgr.earlyExportTripPart.length > 0) {\r\n            let arr2 = []\r\n            for (let i = arr.length - 1; i >= 0; i--) {\r\n                if (this.judgeValueInArr(arr[i].appId, CacheMgr.earlyExportTripPart)) {\r\n                    arr2.push(Tools.deepClone(arr[i]))\r\n                    arr.splice(i, 1)\r\n                }\r\n            }\r\n            for (let i = 0; i < arr2.length; i++) {\r\n                arr.push(arr2[i])\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n\r\n    /**\r\n     * 改变节点位置的 y 为 banner 位置的 y (骗点用)\r\n     * @param node\r\n     */\r\n    public static changeNodePosition(node: cc.Node) {\r\n        let banner = Game.Ins.banner;\r\n        node.y = banner.y + banner.height / 2;\r\n    }\r\n\r\n    /**\r\n     * 调整按钮位置到 banner上方\r\n     * @param button\r\n     */\r\n    public static setExportPos(button: cc.Node) {\r\n        let banner = Game.Ins.banner;\r\n        this.changeNodePosition(button);\r\n        button.y = button.y + banner.height / 2 + button.height / 2;\r\n    }\r\n\r\n\r\n    /**\r\n     * 骗点结束移动 按钮\r\n     * @param time\r\n     * @param button\r\n     */\r\n    public static setExportPos_Animation(time: number, button: cc.Node) {\r\n        let banner = Game.Ins.banner\r\n        this.changeNodePosition(button);\r\n        cc.tween(button)\r\n            .to(time, {y: button.y + banner.height / 2 + button.height / 2}, {easing: \"smooth\"})\r\n            .start();\r\n    }\r\n\r\n    /**\r\n     * 判断百分比\r\n     * @param per\r\n     */\r\n    public static checkPer(per: number) {\r\n        if (!per) {\r\n            return false;\r\n        }\r\n        return Tools.getRandomMax(100) <= per;\r\n    }\r\n\r\n    /**\r\n     * 游戏链接后台，资源加载, 初始化 gameBox\r\n     */\r\n    public static model_initModel(f: Function): number {\r\n        let functions: Function[] = [\r\n            () => {\r\n                let names = [\"sub\",\"homeView\",\"gameView\"]\r\n                LoadMgr.loadBundle(names).then(() => {\r\n                    f()\r\n                })\r\n            },\r\n            () => {\r\n                f();\r\n            },\r\n        ]\r\n\r\n        for (let i = 0; i < functions.length; i++) {\r\n            functions[i]();\r\n        }\r\n        return functions.length;\r\n    }\r\n\r\n    /**\r\n     *  播放视频， resolve 返回 true 为获得奖励， false 为未获得奖励\r\n     */\r\n    public static handleVideo() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!Global.isVivo) {\r\n                resolve(true);\r\n                return\r\n            }\r\n            AudioMgr.backMusic(false) ;\r\n            QgRewardedAd.showRewardedVideo().then((res) => {\r\n                let boolean : boolean = res == 1 ;\r\n                AudioMgr.backMusic() ;\r\n                resolve(boolean);\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 打开或关闭 碰撞系统功能\r\n     * @param isOpen 碰撞系统\r\n     * @param draw debug 绘制\r\n     * @param bounding 包围盒\r\n     */\r\n    public static getCollision(isOpen: boolean = true, draw: boolean = false, bounding: boolean = false) {\r\n        let Manager = cc.director.getCollisionManager();\r\n        Manager.enabled = isOpen;\r\n        Manager.enabledDebugDraw = draw;\r\n        Manager.enabledDrawBoundingBox = bounding;\r\n    }\r\n\r\n    /**\r\n     * 打开或关闭 物理系统\r\n     * @param isOpen\r\n     * @param draw\r\n     */\r\n    public static getPhysics(isOpen: boolean = true, draw: boolean = false) {\r\n        let Manager = cc.director.getPhysicsManager();\r\n        Manager.enabled = true;\r\n        if (draw) {\r\n            cc.director.getPhysicsManager().debugDrawFlags =\r\n                cc.PhysicsManager.DrawBits.e_aabbBit\r\n                |\r\n                cc.PhysicsManager.DrawBits.e_jointBit\r\n                |\r\n                cc.PhysicsManager.DrawBits.e_shapeBit\r\n            ;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  注册一组 touch 事件\r\n     * @param node\r\n     * @param start\r\n     * @param move\r\n     * @param end\r\n     * @param cancel\r\n     * @param target\r\n     * @param bool\r\n     */\r\n    public static onTouchAll(node: cc.Node, start: Function, move: Function, end: Function, cancel: Function, target: any, bool: boolean = true) {\r\n        if (node) {\r\n            if (bool) {\r\n                node.on(cc.Node.EventType.TOUCH_START, start, target);\r\n                node.on(cc.Node.EventType.TOUCH_MOVE, move, target);\r\n                node.on(cc.Node.EventType.TOUCH_END, end, target);\r\n                node.on(cc.Node.EventType.TOUCH_CANCEL, cancel, target);\r\n            } else {\r\n                node.off(cc.Node.EventType.TOUCH_START, start, target);\r\n                node.off(cc.Node.EventType.TOUCH_MOVE, move, target);\r\n                node.off(cc.Node.EventType.TOUCH_END, end, target);\r\n                node.off(cc.Node.EventType.TOUCH_CANCEL, cancel, target);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取节点所在父节点的下标\r\n     *  @param node\r\n     */\r\n    public static getChildrenIndex(node: cc.Node): number {\r\n        let parent = node.parent;\r\n        for (let i = 0; i < parent.children.length; i++) {\r\n            let value = parent.children[i];\r\n            if (node === value) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 该位置是否在节点中\r\n     * @param point 位置\r\n     * @param node 节点\r\n     */\r\n    public static getPointInNode(point: cc.Vec2, node: cc.Node): boolean {\r\n        return node.getBoundingBoxToWorld().contains(point);\r\n    }\r\n\r\n    /**\r\n     * 获取比较奇怪的时间字符串 （特定的一天) 20210203\r\n     */\r\n    public static date_getTimeNum(date: Date) {\r\n        return date.getFullYear() * 10000 + (date.getMonth() + 1) * 100 + date.getDate()\r\n    }\r\n\r\n    /**\r\n     * 获取两个时间的时间差\r\n     * @param start1   比较靠后的时间\r\n     * @param start2   比较靠前的时间\r\n     * @param type     获取的时间差类型  0 day  1 hour 2 minuter 3 second\r\n     */\r\n    public static date_getTimeDifference(start1: Date | number, start2: Date | number, type: number): any {\r\n        if (isNumber(start1)) {\r\n            start1 = new Date(start1)\r\n        }\r\n        if (isNumber(start2)) {\r\n            start2 = new Date(start2)\r\n        }\r\n\r\n        if (start1 instanceof Date && start2 instanceof Date) {\r\n            let distance = start1.getTime() - start2.getTime(); //时间差秒\r\n            switch (type) {\r\n                case 0:\r\n                    return {\r\n                        distance: Math.floor(distance / (24 * 60 * 60 * 1000)),\r\n                        distance_real: distance,\r\n                    }\r\n                case 1 :\r\n                    return {\r\n                        distance: Math.floor(distance / (60 * 60 * 1000)),\r\n                        distance_real: distance,\r\n                    }\r\n                case 2 :\r\n                    return {\r\n                        distance: Math.floor(distance / (60 * 1000)),\r\n                        distance_real: distance,\r\n                    }\r\n                case 3  :\r\n                    return {\r\n                        distance: Math.floor(distance / (1000)),\r\n                        distance_real: distance,\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前主机地址\r\n     */\r\n    public static getHost(): string {\r\n        return JiuWuSDK.url.host;\r\n    }\r\n\r\n    /**\r\n     * 根据一个矩形 ，创建一个节点\r\n     */\r\n    public static getNodeForRect(rect: cc.Rect): cc.Node {\r\n        let node = new cc.Node();\r\n        node.width = rect.width;\r\n        node.height = rect.height;\r\n        node.setPosition(cc.v3(rect.center));\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 获取一个节点四个点的位置 (未经旋转 这种操作）\r\n     * @param node\r\n     */\r\n    //获取一个节点四个点的位置 (未经旋转 这种操作）\r\n    public static getNodeFourPoint(node: cc.Node) {\r\n        let anchor = node.getAnchorPoint()\r\n        return {\r\n            left_down: cc.v2(node.position.x - anchor.x * node.width, node.position.y - anchor.y * node.height),\r\n            left_top: cc.v2(node.position.x - anchor.x * node.width, node.position.y + (1 - anchor.y) * node.height),\r\n            right_down: cc.v2(node.position.x + (1 - anchor.x) * node.width, node.position.y - anchor.y * node.height),\r\n            right_top: cc.v2(node.position.x + (1 - anchor.x) * node.width, node.position.y + (1 - anchor.y) * node.height)\r\n        }\r\n    }\r\n\r\n\r\n    //判断一个值是否在一个数组中\r\n    public static judgeValueInArr(value: any, arr: Array<any>) {\r\n        let flag = false\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === value) {\r\n                flag = true\r\n                break\r\n            }\r\n        }\r\n        return flag\r\n    }\r\n\r\n\r\n    //判断两个数组是否相交\r\n    public static judgeArraySame(arr1: number[], arr2: number[]) {\r\n        let flag = false\r\n        for (let i = 0; i < arr1.length; i++) {\r\n            for (let j = 0; j < arr2.length; j++) {\r\n                if (arr1[i] == arr2[j]) {\r\n                    flag = true\r\n                    return flag\r\n                }\r\n            }\r\n        }\r\n        return flag\r\n    }\r\n\r\n\r\n    //banner根据节点适配\r\n    public static getRealSize(node: cc.Node, resize_width = null, resize_height = null): {\r\n        width: number,\r\n        height: number,\r\n        left: number,\r\n        top: number\r\n    } {\r\n        //获取屏幕设计尺寸\r\n        let canvas = node.parent\r\n        let size = canvas.getContentSize()\r\n        let data = Tools.getNodeFourPoint(canvas)\r\n        let pc = data.left_top.sub(cc.v2(Tools.getNodeFourPoint(node).left_top))\r\n        let screen = cc.view.getFrameSize();\r\n        let scaleX = screen.width / size.width\r\n        let scaleY = screen.height / size.height\r\n\r\n        if (resize_width && resize_height) {\r\n            node.width = resize_width / scaleX\r\n            node.height = resize_height / scaleY\r\n        }\r\n        // console.log(\"scaleX\", scaleX, \"scaleY\", scaleY)\r\n        return {\r\n            width: node.width * scaleX,\r\n            height: node.height * scaleY,\r\n            left: -pc.x * scaleX,\r\n            top: pc.y * scaleY,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改体力 ， 如果体力不足 ，修改失败的话 ，会自动弹出体力不足框\r\n     * @param num 需要改动的体力\r\n     * @param callBack\r\n     */\r\n    public static changeStamina(num: number, callBack?: Function): boolean {\r\n        if (CacheMgr.stamina + num < 0) {\r\n            PanelMgr.INS.openPanel({\r\n                panel: ShortageView,\r\n                layer: Layer.gameLayer,\r\n                param: {\r\n                    type: \"stamina\",\r\n                    callBack: callBack,\r\n                    price: Math.abs(num),\r\n                }\r\n            })\r\n            return false;\r\n        } else {\r\n            if (callBack) {\r\n                callBack();\r\n            }\r\n        }\r\n        CacheMgr.stamina = CacheMgr.stamina + num;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 修改金币 ， 如果金币不足 ，修改失败的话 ，会自动弹出金币不足框\r\n     * @param num\r\n     * @param callBack   成功回调 （包括领取金币成功）\r\n     */\r\n    public static changeGold(num: number, callBack?: Function): boolean {\r\n        if (CacheMgr.gold + num < 0) {\r\n            PanelMgr.INS.openPanel({\r\n                panel: ShortageView,\r\n                layer: Layer.gameLayer,\r\n                param: {\r\n                    type: \"gold\",\r\n                    callBack: callBack,\r\n                    price: Math.abs(num),\r\n                }\r\n            })\r\n            return false\r\n        } else {\r\n            if (callBack) {\r\n                callBack();\r\n            }\r\n        }\r\n        CacheMgr.gold = CacheMgr.gold + num\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * 判断体力 ， 如果体力不足 ，修改失败的话 ，会自动弹出体力不足框\r\n     * @param num 需要改动的体力\r\n     * @param callBack\r\n     */\r\n    public static judgeStamina(num: number, callBack?: Function): boolean {\r\n        if (CacheMgr.stamina + num < 0) {\r\n            PanelMgr.INS.openPanel({\r\n                panel: ShortageView,\r\n                layer: Layer.gameLayer,\r\n                param: {\r\n                    type: \"stamina\",\r\n                    callBack: callBack,\r\n                    price: 0,\r\n                }\r\n            })\r\n            return false;\r\n        } else {\r\n            if (callBack) {\r\n                callBack();\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断金币 ， 如果金币不足 ，修改失败的话 ，会自动弹出金币不足框\r\n     * @param num\r\n     * @param callBack   成功回调 （包括领取金币成功）\r\n     */\r\n    public static judgeGold(num: number, callBack?: Function): boolean {\r\n        if (CacheMgr.gold + num < 0) {\r\n            PanelMgr.INS.openPanel({\r\n                panel: ShortageView,\r\n                layer: Layer.gameLayer,\r\n                param: {\r\n                    type: \"gold\",\r\n                    callBack: callBack,\r\n                    price: num,\r\n                }\r\n            })\r\n            return false\r\n        } else {\r\n            if (callBack) {\r\n                callBack();\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    /**\r\n     * 已知圆心，半径，角度，求圆上的点坐标 (坐标需要自己转)\r\n     * @param center\r\n     * @param r\r\n     * @param angle\r\n     */\r\n    public static getCirclePoint(center: cc.Vec3, r: number, angle: number): cc.Vec3 {\r\n        return cc.v3(\r\n            center.x + r * Math.cos(angle * 3.14 / 180),\r\n            center.y + r * Math.sin(angle * 3.14 / 180)\r\n        )\r\n    }\r\n\r\n    public static handlerInters() {\r\n        return new Promise((resolve) => {\r\n            if (!Global.isVivo) {\r\n                resolve(true);\r\n                return\r\n            }\r\n            QgIntersAd.showInters();\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 判断原生广告显示\r\n     */\r\n    public static showNative(type, labelType, time) {\r\n        return new Promise((resolve) => {\r\n            if (QgNative.nativeMessage == null) {\r\n                QgNative.loadNative().then((res) => {\r\n                    if (res == false) {\r\n                        LogMgr.error(\"原生广告拉取失败......\")\r\n                        resolve(false);\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n            PanelMgr.INS.openPanel({\r\n                panel: NativeView,\r\n                layer: Layer.nativeLayer,\r\n                param: {\r\n                    type: type,\r\n                    labelType: labelType,\r\n                    time: time\r\n                }\r\n            })\r\n            resolve(true);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]}