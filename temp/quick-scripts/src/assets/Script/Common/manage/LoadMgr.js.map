{"version":3,"sources":["assets\\Script\\Common\\manage\\LoadMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Global from \"../Global\";\r\nimport GameLog from \"./GameLogMgr\";\r\nimport Texture2D = cc.Texture2D;\r\nimport AudioClip = cc.AudioClip;\r\nimport GameLogMgr from \"./GameLogMgr\";\r\nimport TestMgr from \"../Test\";\r\nimport Bundle = cc.AssetManager.Bundle;\r\nimport url = cc.url;\r\n\r\nexport default class LoadMgr {\r\n\r\n    private static _sprite = {};\r\n\r\n    private static alreadyLoadBundle: Map<string, Bundle> = new Map<string, Bundle>()\r\n\r\n    public static loadBundle(bundleNames: string[]) {\r\n        return new Promise((resolve, reject) => {\r\n            let functions: any[] = []\r\n            for (let i = 0; i < bundleNames.length; i++) {\r\n                let name = bundleNames[i]\r\n                if (!this.alreadyLoadBundle.has(name)) {\r\n                    functions.push(this.loadBundle_Single(name))\r\n                }\r\n            }\r\n            Promise.all(functions).then((data) => {\r\n                resolve(data)\r\n            }, () => {\r\n                reject(false)\r\n            })\r\n        })\r\n    }\r\n\r\n    public static loadBundle_Single(name: string) {\r\n        return new Promise((resolve1, reject1) => {\r\n            cc.assetManager.loadBundle(name, (err, data) => {\r\n                if (err) {\r\n                    GameLogMgr.error(\"加载分包失败！！！！！！！！！\", err, \"name :\", name)\r\n                    reject1(false)\r\n                    return\r\n                }\r\n                this.alreadyLoadBundle.set(name, data)\r\n                resolve1(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    public static judgeBundleLoad(name: string): boolean {\r\n        return this.alreadyLoadBundle.has(name)\r\n    }\r\n\r\n    public static getBundle(bundle_name: string): Bundle {\r\n        return this.alreadyLoadBundle.get(bundle_name)\r\n    }\r\n\r\n    //提前初始化所有分包\r\n    public static init_bundleMgr() {\r\n        this.loadBundle_Single(\"homeView\").then()\r\n        this.loadBundle_Single(\"gameView\").then()\r\n        this.loadBundle_Single(\"homeView\").then()\r\n        this.loadBundle_Single(\"treaView\").then()\r\n        this.loadBundle_Single(\"oneBox\").then()\r\n    }\r\n\r\n    /**\r\n     * 加载图片\r\n     * @param sprite\r\n     * @param _url\r\n     * @param bundle 图片所在的分包\r\n     * @param needActive\r\n     */\r\n    public static loadSprite(sprite: cc.Sprite, _url: string, bundle: Bundle = this.getBundle(\"sub\"), needActive = true) {\r\n        let id = bundle.name + \"/\" + _url\r\n        return new Promise((resolve, reject) => {\r\n            if (this._sprite.hasOwnProperty(id)) {\r\n                sprite.spriteFrame = this._sprite[id];\r\n                if (needActive) {\r\n                    sprite.node.active = true;\r\n                }\r\n                resolve(this._sprite[id]);\r\n                return;\r\n            }\r\n            bundle.load(\"image/\" + _url, cc.SpriteFrame, (err: Error, spf: cc.SpriteFrame) => {\r\n                if (err) {\r\n                    GameLog.error(id, ' 图片加载错误 ', err);\r\n                    reject(false);\r\n                    return;\r\n                }\r\n                this._sprite[id] = spf;\r\n                sprite.spriteFrame = spf;\r\n                if (needActive) {\r\n                    sprite.node.active = true;\r\n                }\r\n                resolve(spf);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _remote_Sprite: Map<string, cc.SpriteFrame> = new Map<string, cc.SpriteFrame>();\r\n\r\n\r\n    public static loadRemoteSprite(_url: string, sprite: cc.Sprite = null, needActive: boolean = true) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this._remote_Sprite.get(_url)) {\r\n                if (sprite) {\r\n                    sprite.spriteFrame = this._remote_Sprite.get(_url);\r\n                }\r\n                if (needActive) {\r\n                    if (sprite) {\r\n                        sprite.node.active = true;\r\n                    }\r\n                }\r\n                resolve(this._remote_Sprite.get(_url))\r\n            } else {\r\n                cc.assetManager.loadRemote(_url, Texture2D, (err, texture: Texture2D) => {\r\n                    if (texture.width == 0) {\r\n                        let path = cc.assetManager.cacheManager.getTemp(_url);\r\n                        cc.assetManager.loadRemote(path, (err, sp: cc.Texture2D) => {\r\n                            if (err) {\r\n                                GameLog.warn(\"第二次加载远程图片失败\", err);\r\n                                reject(false);\r\n                                return;\r\n                            }\r\n                            this._remote_Sprite.set(_url, new cc.SpriteFrame(sp));\r\n                        });\r\n                        if (sprite) {\r\n                            sprite.spriteFrame = this._remote_Sprite.get(_url);\r\n                        }\r\n                        resolve(this._remote_Sprite.get(_url));\r\n                    } else {\r\n                        if (err) {\r\n                            GameLog.warn(\"加载远程图片失败\", err);\r\n                            reject(false);\r\n                            return;\r\n                        }\r\n                        this._remote_Sprite.set(_url, new cc.SpriteFrame((texture)));\r\n                    }\r\n                    if (needActive) {\r\n                        if (sprite) {\r\n                            sprite.node.active = true;\r\n                            sprite.spriteFrame = this._remote_Sprite.get(_url);\r\n                            // sprite.spriteFrame = new cc.SpriteFrame(texture)\r\n                        }\r\n                    }\r\n                    resolve(this._remote_Sprite.get(_url));\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _prefabCaches = {};\r\n\r\n    /**\r\n     * 加载 预制体\r\n     * @param _url\r\n     * @param bundle  预制体所在的分包\r\n     */\r\n    public static loadPrefab(_url: string, bundle: Bundle = this.getBundle(\"sub\")) {\r\n        let id = bundle.name + \"/\" + _url\r\n        return new Promise((resolve, reject) => {\r\n            if (this._prefabCaches.hasOwnProperty(id)) {\r\n                resolve(this._prefabCaches[id]);\r\n                return;\r\n            }\r\n            bundle.load(\"prefab/\" + _url, cc.Prefab, (err: Error, prefab: cc.Prefab) => {\r\n                if (err) {\r\n                    GameLog.error('setPrefab error', err, id);\r\n                    reject(false);\r\n                    return;\r\n                }\r\n                this._prefabCaches[id] = prefab;\r\n                resolve(prefab);\r\n            });\r\n        });\r\n    }\r\n\r\n    private static _audio_caches: Map<string, cc.AudioClip> = new Map<string, cc.AudioClip>();\r\n\r\n    public static load_AudioClip(_url: string, bundle: Bundle = this.getBundle(\"sub\")) {\r\n        let id = bundle.name + \"/\" + _url\r\n        return new Promise((resolve, reject) => {\r\n            if (this._audio_caches.get(id)) {\r\n                let audioClip = this._audio_caches.get(id);\r\n                resolve(audioClip);\r\n            } else {\r\n                bundle.load(\"audio/\" + _url, cc.AudioClip, (err, audio: AudioClip) => {\r\n                    if (err) {\r\n                        GameLog.error(\"加载音频失败\", err, \"url : \", id);\r\n                        reject(null);\r\n                        return;\r\n                    }\r\n                    this._audio_caches.set(id, audio);\r\n                    resolve(audio);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private static _AtlasCaches = {};\r\n\r\n    /**\r\n     * 加载 图集文件\r\n     * @private\r\n     */\r\n    public static loadAtlas(_url: string, bundle: Bundle = this.getBundle(\"sub\")) {\r\n        let id = bundle.name + \"/\" + _url\r\n        return new Promise((resolve, reject) => {\r\n            if (this._AtlasCaches.hasOwnProperty(id)) {\r\n                resolve(this._AtlasCaches[id]);\r\n                return;\r\n            }\r\n            bundle.load(\"image/\" + _url, cc.SpriteAtlas, (err: Error, atlas: cc.SpriteAtlas) => {\r\n                if (err) {\r\n                    GameLog.log('setAtlas error', err, id);\r\n                    reject(false);\r\n                    return;\r\n                }\r\n                this._AtlasCaches[id] = atlas;\r\n                resolve(atlas);\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}