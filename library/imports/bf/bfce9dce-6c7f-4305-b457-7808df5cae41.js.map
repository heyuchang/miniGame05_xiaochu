{"version":3,"sources":["assets\\Script\\Moudle\\View\\GameView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import LayerPanel, {UrlInfo} from \"../../Common/manage/Layer/LayerPanel\";\r\nimport Tools from \"../../Common/Tools\";\r\nimport EndView from \"./EndView\";\r\nimport Text from \"./logic/common/text\";\r\nimport gameConfig from \"./logic/common/config\";\r\nimport HomeView from \"./HomeView\";\r\nimport CacheMgr from \"../../Common/manage/CacheMgr\";\r\nimport AudioMgr from \"../../Common/manage/AudioMgr\";\r\nimport LoadMgr from \"../../Common/manage/LoadMgr\";\r\nimport Constant from \"../../Common/Constant\";\r\nimport PanelMgr, {Layer} from \"../../Common/manage/PanelMgr\";\r\nimport tween = cc.tween;\r\nimport ShowConfig from \"../../Common/ShowConfig\";\r\nimport Global from \"../../Common/Global\";\r\nimport QgBanner from \"../../Common/manage/Api/QgBanner\";\r\nimport Emit from \"../../Common/manage/Emit/Emit\";\r\nimport EmitData from \"../../Common/manage/Emit/EmitData\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameView extends LayerPanel {\r\n    public static getUrl(): UrlInfo {\r\n        return {\r\n            bundle: \"gameView\",\r\n            name: \"gameView\"\r\n        }\r\n    }\r\n    private _paramData: any = {};\r\n\r\n    private _button: cc.Node = null;\r\n\r\n    //test\r\n    private testMakeBottomBlock: cc.Node = null\r\n    private testReadyMakeBottomBlock: cc.Node = null\r\n    //logic\r\n    @property(cc.SpriteFrame)\r\n    public graySpriteFrame: cc.SpriteFrame = null\r\n    @property(cc.SpriteFrame)\r\n    public whiteSpriteFrame: cc.SpriteFrame = null\r\n    @property(cc.SpriteFrame)\r\n    public hintBlockSpriteFrame: cc.SpriteFrame = null\r\n    @property(cc.Prefab)\r\n    public text_prefab: cc.Prefab = null\r\n    @property(cc.Prefab)\r\n    public hammer_prefab: cc.Prefab = null\r\n    @property(cc.Prefab)\r\n    public sprite_prefab: cc.Prefab = null\r\n    @property([cc.SpriteFrame])\r\n    public sprite_spriteFrame: cc.SpriteFrame[] = []\r\n\r\n    @property(cc.SpriteFrame)\r\n    public hint_1_spriteFrame: cc.SpriteFrame = null\r\n    @property(cc.SpriteFrame)\r\n    public hint_2_spriteFrame: cc.SpriteFrame = null\r\n\r\n    @property(cc.Prefab)\r\n    public start_prefab: cc.Prefab = null\r\n    @property(cc.Prefab)\r\n    public hardUp_prefab: cc.Prefab = null\r\n    @property(cc.Prefab)\r\n    public nice_prefab: cc.Prefab = null\r\n    @property(cc.Prefab)\r\n    public get_prefab: cc.Prefab = null\r\n\r\n\r\n    private _startPoint: cc.Node = null\r\n    private _content: cc.Node = null\r\n    private _hintUI: cc.Node = null\r\n    private _whiteHint: cc.Node = null\r\n    private _textHint: cc.Node = null\r\n    private _hardLevelLabel: cc.Label = null\r\n    private _scoreLabel: cc.Label = null\r\n    private _mouth: cc.Node = null\r\n    private _mask: cc.Node = null\r\n    private _hammer: cc.Node = null\r\n    private _sprite: cc.Node = null\r\n    private _menu: cc.Node = null\r\n    private _menuPanel: cc.Node = null\r\n\r\n    private _hint_hammer: cc.Node = null\r\n    private _hint_sprite: cc.Node = null\r\n    private _hint_mask: cc.Node = null\r\n    private _hint_label: cc.Node = null\r\n    private _hint_hand: cc.Node = null\r\n\r\n    private _price_sprite: cc.Node = null\r\n    private _sprite_icon: cc.Node = null\r\n    private _hammer_sprite: cc.Node = null\r\n    private _hammer_icon: cc.Node = null\r\n\r\n\r\n    private _content_cover: cc.Node = null\r\n\r\n    private _lineDatas: lineData[] = [null]\r\n    private _hintData: lineData = null\r\n    private blockPool: cc.NodePool = null\r\n    private nextBlockInfo: nextBlockInfo [] = []\r\n    private touchEndFlag: boolean = false\r\n    private hardLevel: number = 1\r\n    private score: number = 0\r\n    private continueXiao: number = 0 // 当前连消\r\n    private allContinueXiao: number = 0//当前难度总消除\r\n    private moveX = -1\r\n    private sprite_color: number = 0 //精灵颜色\r\n    private hintFlag = true\r\n\r\n    public initUI() {\r\n        //todo 逻辑\r\n        this.testMakeBottomBlock = this.getNode(\"testUI/makeBottomBlock\")\r\n        this.testReadyMakeBottomBlock = this.getNode(\"testUI/readymakeBottomBlock\")\r\n        this.onTouch(this.testMakeBottomBlock, () => {\r\n            this.makeBottomBlock()\r\n        })\r\n        this.onTouch(this.testReadyMakeBottomBlock, () => {\r\n            this.readyMakeBottomBlock()\r\n        })\r\n        this._startPoint = this.getNode(\"startPoint\")\r\n        this._content = this.getNode(\"content\")\r\n        this._content_cover = this.getNode(\"content_cover\")\r\n        this._hintUI = this.getNode(\"hintUI\")\r\n        this._whiteHint = this.getNode(\"white_hint\")\r\n        this._textHint = this.getNode(\"textHint\")\r\n        this._mouth = this.getNode(\"content_cover/top/mouth\")\r\n        this._mask = this.getNode(\"mask\")\r\n        this._hammer_sprite = this.getNode(\"bottomUI/hammer/price\")\r\n        this._hammer_icon = this.getNode(\"bottomUI/hammer/vedioIcon\")\r\n        this._hammer_icon.active = false\r\n        this._price_sprite = this.getNode(\"bottomUI/sprite/price\")\r\n        this._sprite_icon = this.getNode(\"bottomUI/sprite/vedioIcon\")\r\n        this._sprite_icon.active = false\r\n        this._hint_mask = this.getNode(\"hint_mask\")\r\n        this._hint_mask.active = false\r\n        this._hint_label = this.getNode(\"hint_label\")\r\n        this._hint_label.active = false\r\n        this._hint_hand = this.getNode(\"hint_hand\")\r\n        this._hint_hand.active = false\r\n\r\n        this._menu = this.getNode(\"bottomUI/menu\")\r\n        this.onTouch(this._menu, this.handle_menu)\r\n        this._menuPanel = this.getNode(\"bottomUI/menuPanel\")\r\n        this._menuPanel.active = false\r\n        this.onTouch(this._menuPanel.children[0], this.handle_restart)\r\n        this.onTouch(this._menuPanel.children[1], this.handle_return)\r\n\r\n        this._hammer = this.getNode(\"bottomUI/hammer\")\r\n        // this._hammer.on(cc.Node.EventType.TOUCH_END, this.handle_hammer, this)\r\n        this.onTouch(this._hammer, this.handle_hammer)\r\n        this._sprite = this.getNode(\"bottomUI/sprite\")\r\n        this.onTouch(this._sprite, this.handle_sprite)\r\n\r\n        this._hint_hammer = this.getNode(\"hint_hammer\")\r\n        this._hint_hammer.active = false\r\n\r\n        this._hint_sprite = this.getNode(\"hint_sprite\")\r\n        this._hint_sprite.active = false\r\n\r\n        this._hardLevelLabel = this.getNode(\"content_cover/top/hardLevel\").getComponent(cc.Label)\r\n        this._scoreLabel = this.getNode(\"content_cover/top/scoreData\").getComponent(cc.Label)\r\n\r\n\r\n        this.updateSprite()\r\n        //创建对象池\r\n        this.blockPool = new cc.NodePool()\r\n        let blockExm = new cc.Node()\r\n        blockExm.x = 0\r\n        blockExm.y = 0\r\n        blockExm.setAnchorPoint(0, 0)\r\n        let sprite = blockExm.addComponent(cc.Sprite)\r\n        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM\r\n        for (let i = 0; i < 80; i++) {\r\n            let node = cc.instantiate(blockExm)\r\n            this.blockPool.put(node)\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this._menuPanel.position = this._menu.position\r\n            let gridExm = new cc.Node()\r\n            gameConfig.gridSize = this._startPoint.height / 10\r\n            this._content.width = gameConfig.gridSize * 8\r\n            this._content.height = gameConfig.gridSize * 10\r\n            this._whiteHint.width = this._content.width\r\n            this._whiteHint.height = this._content.height\r\n            this._whiteHint.parent = this._content\r\n            gridExm.setAnchorPoint(0, 0)\r\n            gridExm.width = gameConfig.gridSize\r\n            gridExm.height = gameConfig.gridSize\r\n            gridExm.opacity = 200\r\n            this._hint_hand.width = gameConfig.gridSize\r\n            this._hint_hand.height = gameConfig.gridSize\r\n            this._hint_hand.setAnchorPoint(0, 0)\r\n            let lineContentExm = new cc.Node()\r\n            lineContentExm.setAnchorPoint(0.5, 0)\r\n            lineContentExm.width = gridExm.width * 8\r\n            lineContentExm.height = gridExm.height\r\n            this._hintUI.width = lineContentExm.width\r\n\r\n            let startPosition = this._startPoint.getPosition()\r\n            let gridColorTemp = 0   // 0 浅色   1  深色\r\n            for (let i = 10; i >= 1; i--) {\r\n                let lineContent = cc.instantiate(lineContentExm)\r\n                lineContent.name = i.toString()\r\n                lineContent.x = 0\r\n                lineContent.y = startPosition.y\r\n                startPosition.y += lineContent.height\r\n                this._content.addChild(lineContent)\r\n                let posData = Tools.getNodeFourPoint(lineContent)\r\n                lineContent.setAnchorPoint(0, 0)\r\n                lineContent.position = cc.v3(posData.left_down)\r\n                if (this._hintUI.x != lineContent.x) {\r\n                    this._hintUI.x = lineContent.x\r\n                    this._hintData = {\r\n                        blockNodes: [],\r\n                        line: this._hintUI,\r\n                        linePos: [-1]\r\n                    }\r\n                    let flagX = 0\r\n                    for (let i = 1; i <= 8; i++) {\r\n                        this._hintData.linePos[i] = flagX\r\n                        flagX += gameConfig.gridSize\r\n                    }\r\n                }\r\n                let flagX = 0\r\n                let linePosArr: number[] = [-1] //记录 x 轴\r\n                for (let j = 1; j <= 8; j++) {\r\n                    let grid = cc.instantiate(gridExm)\r\n                    grid.name = j.toString()\r\n                    let sprite = grid.addComponent(cc.Sprite)\r\n                    sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM\r\n                    if (gridColorTemp == 0) {\r\n                        if (j == 1 && i != 10) {\r\n                            sprite.spriteFrame = this.graySpriteFrame\r\n                        } else {\r\n                            gridColorTemp = 1\r\n                            sprite.spriteFrame = this.whiteSpriteFrame\r\n                        }\r\n                    } else {\r\n                        if (j == 1 && i != 1) {\r\n                            sprite.spriteFrame = this.whiteSpriteFrame\r\n                        } else {\r\n                            gridColorTemp = 0\r\n                            sprite.spriteFrame = this.graySpriteFrame\r\n                        }\r\n                    }\r\n                    grid.y = 0\r\n                    grid.x = flagX\r\n                    linePosArr.push(grid.x)\r\n                    flagX += grid.width\r\n                    lineContent.addChild(grid)\r\n                }\r\n                this._lineDatas[i] = {\r\n                    blockNodes: [],\r\n                    line: lineContent,\r\n                    linePos: linePosArr\r\n                }\r\n                if (i == 10) {\r\n                    this._whiteHint.x = lineContent.x\r\n                    this._whiteHint.y = lineContent.y\r\n                    this._whiteHint.active = false\r\n                }\r\n            }\r\n            this.adaptive()\r\n            lineContentExm.destroy()\r\n            gridExm.destroy()\r\n            this._startPoint.destroy()\r\n            this.text_start()\r\n            this.makeBottomBlock(true)\r\n        }, 0)\r\n    }\r\n\r\n    public show(param: any) {\r\n        //todo 逻辑\r\n\r\n        ShowConfig.show('gameConfig').then((res) => {\r\n            if (Global.config.gameConfig.bannerShow == 1) {\r\n                QgBanner.showBanner();\r\n            } else {\r\n                QgBanner.hideBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    public hide() {\r\n\r\n        if (Global.config.gameConfig.nativeConfig.type == 2) {\r\n            Emit.instance().emit(EmitData.CLOSE_NATIVE) ;\r\n        }\r\n    }\r\n\r\n    //todo logic 方法\r\n    private getBlock(size: number, color: number = -1): cc.Node {\r\n        let block = this.blockPool.get()\r\n        block.width = size * gameConfig.gridSize\r\n        block.height = gameConfig.gridSize\r\n        block.on(cc.Node.EventType.TOUCH_START, this.handle_block_start, this)\r\n        block.on(cc.Node.EventType.TOUCH_MOVE, this.handle_block_move, this)\r\n        block.on(cc.Node.EventType.TOUCH_END, this.handle_block_end, this)\r\n        block.on(cc.Node.EventType.TOUCH_CANCEL, this.handle_block_end, this)\r\n        LoadMgr.loadAtlas(\"view/gameView/block/p\").then((p: cc.SpriteAtlas) => {\r\n            let id = ((color * 10) + size)\r\n            let spriteFrame = p.getSpriteFrame(id.toString())\r\n            block.getComponent(cc.Sprite).spriteFrame = spriteFrame\r\n        })\r\n        return block\r\n    }\r\n\r\n    //归还方块\r\n    private returnBlock(node: cc.Node) {\r\n        node.off(cc.Node.EventType.TOUCH_START, this.handle_block_start, this)\r\n        node.off(cc.Node.EventType.TOUCH_MOVE, this.handle_block_move, this)\r\n        node.off(cc.Node.EventType.TOUCH_END, this.handle_block_end, this)\r\n        node.off(cc.Node.EventType.TOUCH_CANCEL, this.handle_block_end, this)\r\n        node.parent = null\r\n        node.x = 0\r\n        node.y = 0\r\n        node.width = gameConfig.gridSize\r\n        node.height = gameConfig.gridSize\r\n        node.getComponent(cc.Sprite).spriteFrame = null\r\n        this.blockPool.put(node)\r\n        return\r\n    }\r\n\r\n    //预创建最低层的方块\r\n    private readyMakeBottomBlock() {\r\n        //先随机需要空出来几个\r\n        //判断是否需要新手提示\r\n        if (!CacheMgr.isNeedHint || gameConfig.hint_data.length == 0) {\r\n            let blankNum = Tools.getRandom(gameConfig.bottomBlankMin, gameConfig.bottomBlankMax + 1)\r\n            let blankColumns: number [] = []\r\n            while (true) {\r\n                let column = Tools.getRandom(1, 9)\r\n                let flag = Tools.JudgeValueInArr(column, blankColumns)\r\n                for (let i = 0; i < blankColumns.length; i++) {\r\n                    if (column == blankColumns[i]) {\r\n                        flag = true\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    continue\r\n                }\r\n                blankColumns.push(column)\r\n                if (blankColumns.length >= blankNum) {\r\n                    break\r\n                }\r\n            }\r\n            //获取数组中连续的一段\r\n            let allContinueArr: number [] [] = []\r\n            let continueArr: number [] = []\r\n            for (let i = 1; i < 9; i++) {\r\n                if (Tools.JudgeValueInArr(i, blankColumns)) {\r\n                    if (continueArr.length > 0) {\r\n                        allContinueArr.push(Tools.deepClone(continueArr))\r\n                    }\r\n                    continueArr = []\r\n                } else {\r\n                    continueArr.push(i)\r\n                    if (i == 8) {\r\n                        allContinueArr.push(Tools.deepClone(continueArr))\r\n                    }\r\n                }\r\n            }\r\n            let allBlockInfo: nextBlockInfo[] = []\r\n            for (let i = 0; i < allContinueArr.length; i++) {\r\n                let blocInfos = this.definitionBlockType(Tools.deepClone(allContinueArr[i]))\r\n                blocInfos.forEach((value) => {\r\n                    allBlockInfo.push(value)\r\n                })\r\n            }\r\n            this.nextBlockInfo = allBlockInfo\r\n        } else {\r\n            this.nextBlockInfo = gameConfig.hint_data[0]\r\n            gameConfig.hint_data.shift()\r\n        }\r\n        this.updateHint()\r\n    }\r\n\r\n    //根据一个位置数组定义这一组方块类型\r\n    private definitionBlockType(arr: number []): nextBlockInfo[] {\r\n        let blockInfos: nextBlockInfo[] = []\r\n        while (true) {\r\n            let length = arr.length\r\n            if (arr.length == 0) {\r\n                break\r\n            }\r\n            if (length >= 4) {\r\n                if (Tools.checkPer(gameConfig.grade_of_difficulty_config[this.hardLevel].probability_4)) {\r\n                    blockInfos.push({\r\n                        column: arr [0],\r\n                        num: 4,\r\n                    })\r\n                    arr.splice(0, 4)\r\n                    continue\r\n                }\r\n            }\r\n            if (length >= 3) {\r\n                if (Tools.checkPer(gameConfig.grade_of_difficulty_config[this.hardLevel].probability_3)) {\r\n                    blockInfos.push({\r\n                        column: arr[0],\r\n                        num: 3\r\n                    })\r\n                    arr.splice(0, 3)\r\n                    continue\r\n                }\r\n            }\r\n            if (length >= 2) {\r\n                if (Tools.checkPer(gameConfig.grade_of_difficulty_config[this.hardLevel].probability_2)) {\r\n                    blockInfos.push({\r\n                        column: arr[0],\r\n                        num: 2,\r\n                    })\r\n                    arr.splice(0, 3)\r\n                    continue\r\n                }\r\n            }\r\n            if (length >= 1) {\r\n                if (Tools.checkPer(gameConfig.grade_of_difficulty_config[this.hardLevel].probability_1)) {\r\n                    blockInfos.push({\r\n                        column: arr[0],\r\n                        num: 1,\r\n                    })\r\n                    arr.splice(0, 1)\r\n                }\r\n            }\r\n        }\r\n        return blockInfos\r\n    }\r\n\r\n    //刷新提示\r\n    private updateHint() {\r\n        this._hintUI.removeAllChildren()\r\n        for (let i = 0; i < this.nextBlockInfo.length; i++) {\r\n            let info = this.nextBlockInfo[i]\r\n            let hintBlock = new cc.Node(\"hintBlock\")\r\n            hintBlock.setAnchorPoint(0, 0)\r\n            let sprite = hintBlock.addComponent(cc.Sprite)\r\n            sprite.type = cc.Sprite.Type.SLICED\r\n            sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM\r\n            sprite.spriteFrame = this.hintBlockSpriteFrame\r\n            hintBlock.width = info.num * gameConfig.gridSize\r\n            hintBlock.height = this._hintUI.height\r\n            this._hintUI.addChild(hintBlock)\r\n            hintBlock.y = 0\r\n            hintBlock.x = this._hintData.linePos[info.column]\r\n        }\r\n    }\r\n\r\n    //创建最底层的一套方块\r\n    private makeBottomBlock(isStart = false) {\r\n        if (this.nextBlockInfo.length == 0) {\r\n            this.readyMakeBottomBlock()\r\n        }\r\n        this._mask.active = true\r\n        let result = this.upAllLine()\r\n        Promise.all(result).then(() => {\r\n            //创建方块在下一层\r\n            for (let i = 0; i < this.nextBlockInfo.length; i++) {\r\n                let lineData = this._lineDatas[10]\r\n                let nextBlockInfo = this.nextBlockInfo[i]\r\n                let color = Tools.getRandom(1, 6)\r\n                let block = this.getBlock(nextBlockInfo.num, color)\r\n                block.parent = lineData.line\r\n                block.name = \"c_\" + nextBlockInfo.column\r\n                block.x = lineData.linePos[nextBlockInfo.column]\r\n                let blockInfo: blockInfo = {\r\n                    node: block,\r\n                    column: nextBlockInfo.column,\r\n                    num: nextBlockInfo.num,\r\n                    cover: this.getCoverColumn(nextBlockInfo.column, nextBlockInfo.num),\r\n                    color: color\r\n                }\r\n                lineData.blockNodes.push(blockInfo)\r\n            }\r\n            this._mask.active = false\r\n            this.readyMakeBottomBlock()\r\n            if (isStart) {\r\n                this.makeBottomBlock()\r\n            } else {\r\n                if (CacheMgr.isNeedHint && this.hintFlag) {\r\n                    this.hintFlag = false\r\n                    this.hint_play()\r\n                }\r\n                this.downAllLine(10)\r\n            }\r\n        })\r\n    }\r\n\r\n    //将一行方块向上移动\r\n    private upLine(line: number): any[] {\r\n        let result = []\r\n        let data = this._lineDatas[line]\r\n        let nextData = this._lineDatas[line - 1]\r\n        if (data.blockNodes && data.blockNodes.length > 0) {\r\n            let nodesData = data.blockNodes\r\n            let nextNodesData = nextData.blockNodes\r\n            for (let i = 0; i < nodesData.length; i++) {\r\n                let n = nodesData[i]\r\n                nextNodesData.push(n)\r\n                n.node.parent = nextData.line\r\n                n.node.y = -gameConfig.gridSize //如果y = 0 的话，就没有动画做了\r\n                let p = new Promise((resolve, reject) => {\r\n                    cc.tween(n.node)\r\n                        .to(gameConfig.upTime, {y: 0}, {easing: 'cubicInOut'})\r\n                        .call(() => {\r\n                            resolve(true)\r\n                        })\r\n                        .start()\r\n                })\r\n                result.push(p)\r\n            }\r\n            data.blockNodes = []\r\n        }\r\n        return result\r\n    }\r\n\r\n    //将所有方块向上移动\r\n    private upAllLine(): any[] {\r\n        //从倒数第二行开始   依次往上移动\r\n        let result = []\r\n        for (let i = 2; i <= 10; i++) {\r\n            let r = this.upLine(i)\r\n            for (let i = 0; i < r.length; i++) {\r\n                result.push(r[i])\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    private getCoverColumn(first: number, num: number): number[] {\r\n        let arr: number[] = []\r\n        for (let i = first; i < first + num; i++) {\r\n            arr.push(i)\r\n        }\r\n        return arr\r\n    }\r\n\r\n    private handle_block_start(e: cc.Event.EventTouch) {\r\n        let node: cc.Node = e.target\r\n        this._whiteHint.width = node.width\r\n        let world = node.parent.convertToWorldSpaceAR(node.position)\r\n        let position = this._whiteHint.parent.convertToNodeSpaceAR(world)\r\n        this._whiteHint.x = position.x\r\n        this._whiteHint.active = true\r\n        this.moveX = node.x\r\n    }\r\n\r\n    private handle_block_move(e) {\r\n        let node: cc.Node = e.target\r\n        let a = e.getDelta()\r\n        let world = node.parent.convertToWorldSpaceAR(node.position)\r\n        let position = this._whiteHint.parent.convertToNodeSpaceAR(world)\r\n        this._whiteHint.x = position.x\r\n\r\n        let line = Number(node.parent.name)\r\n        let column = Number(node.name.split(\"_\")[1])\r\n        let data = this.getCanMoveMax(line, column)\r\n        // let position2 = node.parent.convertToNodeSpaceAR(e.getLocation())\r\n        let x = node.x += a.x;\r\n        if (data.min_x > x) {\r\n            x = data.min_x\r\n        } else if (data.max_x < x) {\r\n            x = data.max_x\r\n        }\r\n        node.x = x\r\n    }\r\n\r\n    private getCanMoveMax(line: number, column: number) {\r\n        let lineData = this._lineDatas[line]\r\n        let right_column: number = -1\r\n        let num: number = 0\r\n        let left_column: number = column\r\n        for (let i = 0; i < lineData.blockNodes.length; i++) {\r\n            let data = lineData.blockNodes[i]\r\n            if (data.column == column) {\r\n                num = data.num\r\n                right_column = data.cover[data.cover.length - 1]\r\n            }\r\n        }\r\n        let max = 0\r\n        let min = 0\r\n        //寻找左右两边最大能够移动的距离\r\n        while (true) {\r\n            right_column++\r\n            if (right_column > 8) {\r\n                max = right_column - 1\r\n                break\r\n            }\r\n            let flag = true\r\n            for (let i = 0; i < lineData.blockNodes.length; i++) {\r\n                let data = lineData.blockNodes[i]\r\n                for (let j = 0; j < data.cover.length; j++) {\r\n                    if (data.cover[j] == right_column) {\r\n                        flag = false\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (!flag) {\r\n                max = right_column - 1\r\n                break\r\n            } else {\r\n                max = right_column\r\n            }\r\n        }\r\n        while (true) {\r\n            left_column--\r\n            if (left_column < 1) {\r\n                min = left_column + 1\r\n                break\r\n            }\r\n            let flag = true\r\n            for (let i = 0; i < lineData.blockNodes.length; i++) {\r\n                let data = lineData.blockNodes[i]\r\n                for (let j = 0; j < data.cover.length; j++) {\r\n                    if (data.cover[j] == left_column) {\r\n                        flag = false\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (!flag) {\r\n                min = left_column + 1\r\n                break\r\n            } else {\r\n                min = left_column\r\n            }\r\n        }\r\n        let min_x = lineData.linePos[min]\r\n        let max_x = lineData.linePos[max - num + 1]\r\n\r\n        return {\r\n            min_x: min_x,\r\n            max_x: max_x\r\n        }\r\n    }\r\n\r\n    private handle_block_end(e) {\r\n        let node: cc.Node = e.target\r\n        let line = Number(node.parent.name)\r\n        let column = Number(node.name.split(\"_\")[1])\r\n        this._whiteHint.active = false\r\n        let lineData = this._lineDatas[line]\r\n        this.continueXiao = 0\r\n        for (let i = 1; i <= 8; i++) {\r\n            let grid = lineData.line.getChildByName(i.toString())\r\n            let position = cc.v2(grid.x + grid.width / 2, grid.y + grid.height / 2)\r\n            if (node.getBoundingBox().contains(position)) {\r\n                node.x = lineData.linePos[i]\r\n                node.name = \"c_\" + i\r\n                for (let j = 0; j < lineData.blockNodes.length; j++) {\r\n                    let bInfo = lineData.blockNodes[j]\r\n                    if (bInfo.column == column) {\r\n                        bInfo.column = i\r\n                        bInfo.cover = this.getCoverColumn(i, bInfo.num)\r\n                        break\r\n                    }\r\n                }\r\n                break\r\n            }\r\n        }\r\n        if (node.x == this.moveX) {\r\n            this.moveX = -1\r\n            return\r\n        }\r\n        AudioMgr.play(\"move_end\").then()\r\n        Tools.vibrateShort()\r\n        this.touchEndFlag = true\r\n        this.downAllLine(line)\r\n    }\r\n\r\n    //将一行方块向下移动\r\n    private downLine(line: number): any[] {\r\n        let result = []\r\n        let data = this._lineDatas[line]\r\n        let needChange: any [] = []\r\n        for (let i = 0; i < data.blockNodes.length; i++) {\r\n            //循环需要下拉行的 所有方块\r\n            let blockInfo = data.blockNodes[i]\r\n            //判断每一个方块最多可以下降到哪一行\r\n            let toLine = -1\r\n            for (let j = line + 1; j <= 10; j++) {\r\n                let flag = true\r\n                let nextData = this._lineDatas[j]\r\n                for (let k = 0; k < nextData.blockNodes.length; k++) {\r\n                    let cover = nextData.blockNodes[k].cover\r\n                    if (Tools.judgeArraySame(blockInfo.cover, cover)) {\r\n                        flag = false\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    toLine = j\r\n                } else {\r\n                    break\r\n                }\r\n            }\r\n\r\n            if (toLine != -1) {\r\n                needChange.push({\r\n                    index: i,\r\n                    to: toLine,\r\n                })\r\n                let p = new Promise((resolve, reject) => {\r\n                    let n = blockInfo.node\r\n                    cc.tween(n)\r\n                        .to(gameConfig.downTime * 0.6, {y: -gameConfig.gridSize * (toLine - line)}, {easing: 'cubicInOut'})\r\n                        .by(gameConfig.downTime * 0.2, {y: 10},)\r\n                        .by(gameConfig.downTime * 0.2, {y: -10},)\r\n                        .union()\r\n                        .call(() => {\r\n                            n.parent = this._lineDatas[toLine].line\r\n                            n.y = 0\r\n                            resolve(true)\r\n                        })\r\n                        .start()\r\n                })\r\n                result.push(p)\r\n            }\r\n        }\r\n        for (let i = needChange.length - 1; i >= 0; i--) {\r\n            let cdata = needChange[i]\r\n            this._lineDatas[cdata.to].blockNodes.push(data.blockNodes[cdata.index])\r\n            data.blockNodes.splice(cdata.index, 1)\r\n        }\r\n        return result\r\n    }\r\n\r\n    //将所有方块向下移动\r\n    private downAllLine(line: number) {\r\n        //从倒数第二行开始   依次往上移动\r\n        this._mask.active = true\r\n        let result = []\r\n        for (let i = line; i >= 1; i--) {\r\n            if (i == 10) {\r\n                continue\r\n            }\r\n            let r = this.downLine(i)\r\n            for (let i = 0; i < r.length; i++) {\r\n                result.push(r[i])\r\n            }\r\n        }\r\n\r\n        if (result.length > 0) {\r\n            Promise.all(result).then(() => {\r\n                AudioMgr.play(\"down\").then()\r\n                this.scheduleOnce(() => {\r\n                    this.judgeAllCanClear()\r\n                })\r\n            })\r\n        } else {\r\n            this.judgeAllCanClear()\r\n        }\r\n\r\n        // return result\r\n    }\r\n\r\n    private judgeLineCanClear(line): any {\r\n        let result = null\r\n        let blockData = this._lineDatas[line].blockNodes\r\n        //获取这个一行所有覆盖\r\n        let allCover = []\r\n        for (let i = 0; i < blockData.length; i++) {\r\n            blockData[i].cover.forEach((value) => {\r\n                allCover.push(value)\r\n            })\r\n        }\r\n        if (allCover.length >= 8) {\r\n            result = new Promise((resolve, reject) => {\r\n                cc.tween(this._lineDatas[line].line)\r\n                    .by(gameConfig.lineShake / 2, {x: -15},)\r\n                    .by(gameConfig.lineShake / 2, {x: 15},)\r\n                    // .by(gameConfig.lineShake / 30, {y: 2.5}, {easing: 'cubicInOut'})\r\n                    // .by(gameConfig.lineShake / 30, {x: 5}, {easing: 'cubicInOut'})\r\n                    // .by(gameConfig.lineShake / 30, {y: -5}, {easing: 'cubicInOut'})\r\n                    // .by(gameConfig.lineShake / 30, {y: 2.5, x: -2.5}, {easing: 'cubicInOut'})\r\n                    .union()\r\n                    // .repeat(6)\r\n                    .call(() => {\r\n                        let line_data = this._lineDatas[line]\r\n                        for (let i = 0; i < blockData.length; i++) {\r\n                            this.returnBlock(blockData[i].node)\r\n                        }\r\n                        resolve(true)\r\n                        line_data.blockNodes = []\r\n                    })\r\n                    .start()\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    //判断所有行是否存在可以消除的行\r\n    private judgeAllCanClear(): any[] {\r\n        let result: any[] = []\r\n        for (let i = 1; i <= 10; i++) {\r\n            let r = this.judgeLineCanClear(i)\r\n            if (r) {\r\n                result.push(r)\r\n            }\r\n        }\r\n        if (result.length > 0) {\r\n            AudioMgr.play(\"xiaochu\")\r\n            Tools.vibrateShort(\"heavy\")\r\n            this.continueXiao += result.length\r\n            this.allContinueXiao += result.length\r\n            this.text_defen(result.length)\r\n            this.text_addHard()\r\n            Promise.all(result).then(() => {\r\n                this.scheduleOnce(() => {\r\n                    this.downAllLine(10)\r\n                }, 0)\r\n                if (CacheMgr.isNeedHint) {\r\n                    this.hint_hint()\r\n                }\r\n            })\r\n        } else {\r\n            //没有需要消除的，需要判断一下是不是输了 ， 即第1层是不是有东西\r\n            if (this._lineDatas[1].blockNodes.length > 0) {\r\n                //todo 输了\r\n                this.fail_win()\r\n                return\r\n            } else if (this._lineDatas[9].blockNodes.length == 0) {\r\n                this.touchEndFlag = false\r\n                this.makeBottomBlock()\r\n            } else if (this.touchEndFlag) {\r\n                this.touchEndFlag = false\r\n                this.makeBottomBlock()\r\n            } else {\r\n                this._mask.active = false\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    //适配边框\r\n    private adaptive() {\r\n        let top = this._content_cover.getChildByName(\"top\")\r\n        let left = this._content_cover.getChildByName(\"left_wall\")\r\n        let right = this._content_cover.getChildByName(\"right_wall\")\r\n        let bottom = this._content_cover.getChildByName(\"bottom\")\r\n\r\n\r\n        let temp = this._lineDatas[1].line.getPosition()\r\n        temp.y += gameConfig.gridSize\r\n        let left_top = this._content_cover.convertToNodeSpaceAR(this._content.convertToWorldSpaceAR(temp))\r\n\r\n        temp = Tools.getNodeFourPoint(this._lineDatas[10].line).right_down\r\n        let right_bottom = this._content_cover.convertToNodeSpaceAR(this._content.convertToWorldSpaceAR(temp))\r\n\r\n        top.y = left_top.y\r\n        top.width = this._content.width + 20\r\n        top.getChildByName(\"scoreData\").getComponent(cc.Widget).updateAlignment()\r\n        top.getChildByName(\"hardLevel\").getComponent(cc.Widget).updateAlignment()\r\n        bottom.y = right_bottom.y\r\n        bottom.width = this._content.width + 20\r\n        left.height = this._content.height + 20\r\n        left.x = left_top.x\r\n        left.y = left_top.y - this._content.height / 2\r\n\r\n        right.height = this._content.height + 20\r\n        right.x = right_bottom.x\r\n        right.y = left_top.y - this._content.height / 2\r\n    }\r\n\r\n    update() {\r\n        this._scoreLabel.string = \"当前得分:\" + this.score\r\n        this._hardLevelLabel.string = \"当前难度:\" + this.hardLevel.toString()\r\n\r\n        if (CacheMgr.setting.hammerNum > 0) {\r\n            this._hammer_icon.active = false\r\n            this._hammer_sprite.active = true\r\n            // console.log(\"够 的1 \")\r\n            this._hammer_sprite.getComponent(cc.Label).string = CacheMgr.setting.hammerNum.toString()\r\n        } else {\r\n            // console.log(\"不够1 \")\r\n            this._hammer_sprite.active = false\r\n            this._hammer_icon.active = true\r\n        }\r\n\r\n        if (CacheMgr.setting.spriteNum > 0) {\r\n            // console.log(\"狗的2 \")\r\n            this._sprite_icon.active = false\r\n            this._price_sprite.active = true\r\n            this._price_sprite.getComponent(cc.Label).string = CacheMgr.setting.spriteNum.toString()\r\n        } else {\r\n            // console.log(\"不够2 \")\r\n            this._price_sprite.active = false\r\n            this._sprite_icon.active = true\r\n        }\r\n\r\n    }\r\n\r\n    //更新精灵节点\r\n    updateSprite() {\r\n        this.sprite_color = Tools.getRandom(1, 6)\r\n        this._sprite.getChildByName(\"sprite\").getComponent(cc.Sprite).spriteFrame = this.sprite_spriteFrame[this.sprite_color]\r\n    }\r\n\r\n    private fail_win() {\r\n        AudioMgr.play(\"fail\")\r\n        Tools.vibrateLong()\r\n        let result: any [] = []\r\n        let time: number = 0\r\n        for (let i = 1; i <= 10; i++) {\r\n            let lineData = this._lineDatas[i]\r\n            lineData.blockNodes.forEach((value) => {\r\n                let node = value.node\r\n                let world = this._mouth.parent.convertToWorldSpaceAR(this._mouth.position)\r\n                let position = node.parent.convertToNodeSpaceAR(world)\r\n                position.x -= gameConfig.gridSize / 2\r\n                position.y -= gameConfig.gridSize / 2\r\n                // node.setAnchorPoint(0.5,0.5)\r\n                let p = new Promise((resolve, reject) => {\r\n                    cc.tween(node)\r\n                        .delay(time)\r\n                        .bezierTo(gameConfig.blockFlyTime, cc.v2(Tools.getRandom(0, 500), Tools.getRandom(0, 500)), cc.v2(Tools.getRandom(0, 500), Tools.getRandom(0, 500)), cc.v2(position))\r\n                        .call(() => {\r\n                            node.active = false\r\n                            node.destroy()\r\n                            resolve(true)\r\n                        })\r\n                        .start()\r\n                })\r\n                result.push(p);\r\n                time += gameConfig.blockFlyTime;\r\n            })\r\n        }\r\n\r\n        let isNewMax = false;\r\n        CacheMgr.gold = CacheMgr.gold + this.score;\r\n        if (this.score > CacheMgr.checkpoint) {\r\n            CacheMgr.checkpoint = this.score;\r\n            isNewMax = true;\r\n        }\r\n        Promise.all(result).then(() => {\r\n            PanelMgr.INS.openPanel({\r\n                panel : EndView,\r\n                layer : Layer.gameLayer,\r\n                param : {\r\n                    score : this.score,\r\n                    isNewMax : isNewMax\r\n                },\r\n                call : ()=>{\r\n                    PanelMgr.INS.closePanel(GameView) ;\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    private text_defen(n: number) {\r\n        let num = this.hardLevel * n * this.continueXiao\r\n        this.score += num\r\n        let node: cc.Node = null\r\n        node = cc.instantiate(this.get_prefab)\r\n        node.children[0].getComponent(cc.Label).string = num.toString()\r\n        this._textHint.addChild(node)\r\n        if (this.continueXiao > 1) {\r\n            node = cc.instantiate(this.nice_prefab)\r\n            node.children[0].getComponent(cc.Label).string = this.continueXiao.toString()\r\n            this._textHint.addChild(node)\r\n        }\r\n    }\r\n\r\n    private text_start() {\r\n        AudioMgr.play(\"start\")\r\n        let text_prefab = cc.instantiate(this.start_prefab)\r\n        // text_prefab.getComponent(cc.Label).string = \"游戏开始\"\r\n        text_prefab.getComponent(Text).delay = 5\r\n        // this._textHint.addChild(text_prefab)\r\n        // text_prefab = cc.instantiate(this.text_prefab)\r\n        // text_prefab.getComponent(Text).delay = 5\r\n        // text_prefab.getComponent(cc.Label).string = \"拖动方块，消除整行.\"\r\n        this._textHint.addChild(text_prefab)\r\n    }\r\n\r\n    private text_addHard() {\r\n        if (this.hardLevel >= gameConfig.grade_of_difficulty_config.length - 1) {\r\n            return\r\n        }\r\n        if (this.allContinueXiao >= 10) {\r\n            this.hardLevel++\r\n            this.allContinueXiao = 2\r\n            let text_prefab = cc.instantiate(this.hardUp_prefab)\r\n            // text_prefab.getComponent(cc.Label).string = \"难度提升，得分X\" + this.hardLevel\r\n            text_prefab.children[0].getComponent(cc.Label).string = this.hardLevel.toString()\r\n            text_prefab.getComponent(Text).delay = 5\r\n            this._textHint.addChild(text_prefab)\r\n        }\r\n    }\r\n\r\n    private handle_hammer() {\r\n        if (this._hint_hammer.active) {\r\n            return;\r\n        }\r\n        if (CacheMgr.setting.hammerNum <= 0) {\r\n            Tools.handleVideo().then((res) => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                //判断是否存在3个的方块\r\n                let dataBeChui: any [] = []\r\n                for (let i = 1; i <= 10; i++) {\r\n                    this._lineDatas[i].blockNodes.forEach((value) => {\r\n                        if (value.num >= 3) {\r\n                            dataBeChui.push({\r\n                                line: i,\r\n                                column: value.column\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                if (dataBeChui.length == 0) {\r\n                    this._hint_hammer.active = true\r\n                    // Tools.changeGold(gameConfig.price)\r\n                    this.scheduleOnce(() => {\r\n                        this._hint_hammer.active = false\r\n                    }, gameConfig.hide_hint_sprite)\r\n                    CacheMgr.setting.hammerNum++\r\n                    CacheMgr.setting = CacheMgr.setting\r\n                    return\r\n                }\r\n\r\n                this._mask.active = true\r\n                let pss = []\r\n                let needDelete: Map<number, number[]> = new Map<number, number[]>()\r\n                dataBeChui.forEach((value) => {\r\n                    let pp = new Promise((resolve, reject) => {\r\n                        let lineData = this._lineDatas[value.line]\r\n                        let idx = 0\r\n                        lineData.blockNodes.forEach((value2, index) => {\r\n                            if (value2.column == value.column) {\r\n                                idx = index\r\n                            }\r\n                        })\r\n                        let oldBlock = lineData.blockNodes[idx]\r\n                        let ps = []\r\n                        for (let i = 0; i < oldBlock.cover.length; i++) {\r\n                            let h = cc.instantiate(this.hammer_prefab)\r\n                            h.width = gameConfig.gridSize\r\n                            h.height = gameConfig.gridSize\r\n                            let world = oldBlock.node.parent.convertToWorldSpaceAR(oldBlock.node.position)\r\n                            this._content.addChild(h)\r\n                            h.position = h.parent.convertToNodeSpaceAR(world)\r\n                            h.x += oldBlock.node.width / 2\r\n                            h.y += oldBlock.node.height / 2\r\n                            let p = new Promise((resolve, reject) => {\r\n                                cc.tween(h)\r\n                                    .delay(0.5)\r\n                                    .to(gameConfig.hammerRotation, {angle: 30}, {easing: 'cubicInOut'})\r\n                                    .call(() => {\r\n                                        cc.tween(oldBlock.node)\r\n                                            .by(gameConfig.lineShake / 2, {x: -15},)\r\n                                            .by(gameConfig.lineShake / 2, {x: 15},)\r\n                                            .union()\r\n                                            .call(() => {\r\n                                                h.active = false\r\n                                                h.destroy()\r\n                                                let node = this.getBlock(1, oldBlock.color)\r\n                                                node.y = 0\r\n                                                node.x = lineData.linePos[oldBlock.cover[i]]\r\n                                                node.name = \"c_\" + oldBlock.cover[i]\r\n                                                lineData.line.addChild(node)\r\n                                                lineData.blockNodes.push({\r\n                                                    node: node,\r\n                                                    column: oldBlock.cover[i],\r\n                                                    num: 1,\r\n                                                    cover: [oldBlock.cover[i]],\r\n                                                    color: oldBlock.color,\r\n                                                })\r\n                                                resolve(true)\r\n                                            })\r\n                                            .start()\r\n                                    })\r\n                                    .start()\r\n                            })\r\n                            ps.push(p)\r\n                        }\r\n                        Promise.all(ps).then(() => {\r\n                            this.returnBlock(oldBlock.node)\r\n                            // needDelete.push({\r\n                            //     line: value.line,\r\n                            //     idx: idx\r\n                            // })\r\n                            if (!needDelete.has(value.line)) {\r\n                                needDelete.set(value.line, [])\r\n                            }\r\n                            needDelete.get(value.line).push(idx)\r\n                            // lineData.blockNodes.splice(idx, 1)\r\n                            resolve(true)\r\n                        })\r\n                    })\r\n                    pss.push(pp)\r\n                })\r\n\r\n\r\n                this.scheduleOnce(() => {\r\n                    AudioMgr.play(\"knock\")\r\n                }, 0.5)\r\n                Promise.all(pss).then(() => {\r\n                    this._mask.active = false\r\n                    needDelete.forEach((value, key) => {\r\n                        for (let i = this._lineDatas[key].blockNodes.length - 1; i >= 0; i--) {\r\n                            if (Tools.JudgeValueInArr(i, value)) {\r\n                                this._lineDatas[key].blockNodes.splice(i, 1)\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    this.scheduleOnce(() => {\r\n                        this.downAllLine(10)\r\n                    }, 0)\r\n                })\r\n            })\r\n\r\n        } else {\r\n            //判断是否存在3个的方块\r\n            let dataBeChui: any [] = []\r\n            for (let i = 1; i <= 10; i++) {\r\n                this._lineDatas[i].blockNodes.forEach((value) => {\r\n                    if (value.num >= 3) {\r\n                        dataBeChui.push({\r\n                            line: i,\r\n                            column: value.column\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n            if (dataBeChui.length == 0) {\r\n                this._hint_hammer.active = true\r\n                // Tools.changeGold(gameConfig.price)\r\n                this.scheduleOnce(() => {\r\n                    this._hint_hammer.active = false\r\n                }, gameConfig.hide_hint_sprite)\r\n                return\r\n            }\r\n\r\n            CacheMgr.setting.hammerNum--\r\n            CacheMgr.setting = CacheMgr.setting\r\n            this._mask.active = true\r\n            let pss = []\r\n            let needDelete: Map<number, number[]> = new Map<number, number[]>()\r\n            dataBeChui.forEach((value) => {\r\n                let pp = new Promise((resolve, reject) => {\r\n                    let lineData = this._lineDatas[value.line]\r\n                    let idx = 0\r\n                    lineData.blockNodes.forEach((value2, index) => {\r\n                        if (value2.column == value.column) {\r\n                            idx = index\r\n                        }\r\n                    })\r\n                    let oldBlock = lineData.blockNodes[idx]\r\n                    let ps = []\r\n                    for (let i = 0; i < oldBlock.cover.length; i++) {\r\n                        let h = cc.instantiate(this.hammer_prefab)\r\n                        h.width = gameConfig.gridSize\r\n                        h.height = gameConfig.gridSize\r\n                        let world = oldBlock.node.parent.convertToWorldSpaceAR(oldBlock.node.position)\r\n                        this._content.addChild(h)\r\n                        h.position = h.parent.convertToNodeSpaceAR(world)\r\n                        h.x += oldBlock.node.width / 2\r\n                        h.y += oldBlock.node.height / 2\r\n                        let p = new Promise((resolve, reject) => {\r\n                            cc.tween(h)\r\n                                .delay(0.5)\r\n                                .to(gameConfig.hammerRotation, {angle: 30}, {easing: 'cubicInOut'})\r\n                                .call(() => {\r\n                                    cc.tween(oldBlock.node)\r\n                                        .by(gameConfig.lineShake / 2, {x: -15},)\r\n                                        .by(gameConfig.lineShake / 2, {x: 15},)\r\n                                        .union()\r\n                                        .call(() => {\r\n                                            h.active = false\r\n                                            h.destroy()\r\n                                            let node = this.getBlock(1, oldBlock.color)\r\n                                            node.y = 0\r\n                                            node.x = lineData.linePos[oldBlock.cover[i]]\r\n                                            node.name = \"c_\" + oldBlock.cover[i]\r\n                                            lineData.line.addChild(node)\r\n                                            lineData.blockNodes.push({\r\n                                                node: node,\r\n                                                column: oldBlock.cover[i],\r\n                                                num: 1,\r\n                                                cover: [oldBlock.cover[i]],\r\n                                                color: oldBlock.color,\r\n                                            })\r\n                                            resolve(true)\r\n                                        })\r\n                                        .start()\r\n                                })\r\n                                .start()\r\n                        })\r\n                        ps.push(p)\r\n                    }\r\n                    Promise.all(ps).then(() => {\r\n                        this.returnBlock(oldBlock.node)\r\n                        // needDelete.push({\r\n                        //     line: value.line,\r\n                        //     idx: idx\r\n                        // })\r\n                        if (!needDelete.has(value.line)) {\r\n                            needDelete.set(value.line, [])\r\n                        }\r\n                        needDelete.get(value.line).push(idx)\r\n                        // lineData.blockNodes.splice(idx, 1)\r\n                        resolve(true)\r\n                    })\r\n                })\r\n                pss.push(pp)\r\n            })\r\n\r\n\r\n            this.scheduleOnce(() => {\r\n                AudioMgr.play(\"knock\")\r\n            }, 0.5)\r\n            Promise.all(pss).then(() => {\r\n                this._mask.active = false\r\n                needDelete.forEach((value, key) => {\r\n                    for (let i = this._lineDatas[key].blockNodes.length - 1; i >= 0; i--) {\r\n                        if (Tools.JudgeValueInArr(i, value)) {\r\n                            this._lineDatas[key].blockNodes.splice(i, 1)\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.scheduleOnce(() => {\r\n                    this.downAllLine(10)\r\n                }, 0)\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    private handle_sprite() {\r\n        if (this._hint_sprite.active) {\r\n            return;\r\n        }\r\n\r\n        if (CacheMgr.setting.spriteNum <= 0) {\r\n            Tools.handleVideo().then((res) => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                let needDelData: Map<number, number[]> = new Map<number, number[]>()\r\n                let ps = []\r\n                //遍历颜色\r\n                for (let i = 1; i <= 10; i++) {\r\n                    let blockInfo = this._lineDatas[i].blockNodes\r\n                    blockInfo.forEach((value, index) => {\r\n                        if (value.color == this.sprite_color) {\r\n                            if (!needDelData.has(i)) {\r\n                                needDelData.set(i, [])\r\n                            }\r\n                            needDelData.get(i).push(index)\r\n                            let sprite_node = cc.instantiate(this.sprite_prefab)\r\n                            sprite_node.scale = gameConfig.gridSize / sprite_node.width\r\n                            this.node.addChild(sprite_node)\r\n                            sprite_node.position = sprite_node.parent.convertToNodeSpaceAR(this._sprite.parent.convertToWorldSpaceAR(this._sprite.position))\r\n                            sprite_node.getComponent(cc.Sprite).spriteFrame = this.sprite_spriteFrame[this.sprite_color]\r\n                            let p = new Promise((resolve, reject) => {\r\n                                let world = value.node.parent.convertToWorldSpaceAR(value.node.position)\r\n                                let position = sprite_node.parent.convertToNodeSpaceAR(world)\r\n                                position.x += value.node.width / 2\r\n                                position.y += value.node.height / 2\r\n                                cc.tween(sprite_node)\r\n                                    .bezierTo(gameConfig.sprite_move, cc.v2(Tools.getRandom(-500, 500), Tools.getRandom(-500, 500)), cc.v2(Tools.getRandom(-500, 500), Tools.getRandom(-500, 500)), cc.v2(position))\r\n                                    .call(() => {\r\n                                        cc.tween(sprite_node)\r\n                                            .by(gameConfig.sprite_jump / 2, {y: 20}, {easing: 'cubicInOut'})\r\n                                            .by(gameConfig.sprite_jump / 2, {y: -20}, {easing: 'cubicInOut'})\r\n                                            .union()\r\n                                            .call(() => {\r\n                                                cc.tween(value.node)\r\n                                                    .by(gameConfig.lineShake / 2, {x: -15},)\r\n                                                    .by(gameConfig.lineShake / 2, {x: 15},)\r\n                                                    .union()\r\n                                                    .call(() => {\r\n                                                        sprite_node.active = false\r\n                                                        value.node.active = false\r\n                                                        value.node.destroy()\r\n                                                        resolve(true)\r\n                                                    })\r\n                                                    .start()\r\n                                            })\r\n                                            .start()\r\n                                    })\r\n                                    .start()\r\n                            })\r\n                            ps.push(p)\r\n                        }\r\n                    })\r\n                }\r\n                if (needDelData.size == 0) {\r\n                    this._hint_sprite.active = true\r\n                    // Tools.changeGold(gameConfig.price)\r\n                    this.scheduleOnce(() => {\r\n                        this._hint_sprite.active = false\r\n                    }, gameConfig.hide_hint_sprite)\r\n                    CacheMgr.setting.spriteNum++\r\n                    CacheMgr.setting = CacheMgr.setting\r\n                    console.log(\"加上一次提示机会\", CacheMgr.setting)\r\n                    return\r\n                }\r\n                // AudioMgr.play(\"sprite_move\")\r\n                this._mask.active = true\r\n                Promise.all(ps).then(() => {\r\n                    AudioMgr.play(\"sprite_xiaochu\")\r\n                    needDelData.forEach((value, key) => {\r\n                        for (let i = this._lineDatas[key].blockNodes.length - 1; i >= 0; i--) {\r\n                            if (Tools.JudgeValueInArr(i, value)) {\r\n                                this._lineDatas[key].blockNodes.splice(i, 1)\r\n                            }\r\n                        }\r\n                    })\r\n                    this.updateSprite()\r\n                    this.scheduleOnce(() => {\r\n                        this.downAllLine(10)\r\n                    }, 0)\r\n                    this._mask.active = false\r\n                })\r\n            })\r\n        } else {\r\n            let needDelData: Map<number, number[]> = new Map<number, number[]>()\r\n            let ps = []\r\n            //遍历颜色\r\n            for (let i = 1; i <= 10; i++) {\r\n                let blockInfo = this._lineDatas[i].blockNodes\r\n                blockInfo.forEach((value, index) => {\r\n                    if (value.color == this.sprite_color) {\r\n                        if (!needDelData.has(i)) {\r\n                            needDelData.set(i, [])\r\n                        }\r\n                        needDelData.get(i).push(index)\r\n                        let sprite_node = cc.instantiate(this.sprite_prefab)\r\n                        sprite_node.scale = gameConfig.gridSize / sprite_node.width\r\n                        this.node.addChild(sprite_node)\r\n                        sprite_node.position = sprite_node.parent.convertToNodeSpaceAR(this._sprite.parent.convertToWorldSpaceAR(this._sprite.position))\r\n                        sprite_node.getComponent(cc.Sprite).spriteFrame = this.sprite_spriteFrame[this.sprite_color]\r\n                        let p = new Promise((resolve, reject) => {\r\n                            let world = value.node.parent.convertToWorldSpaceAR(value.node.position)\r\n                            let position = sprite_node.parent.convertToNodeSpaceAR(world)\r\n                            position.x += value.node.width / 2\r\n                            position.y += value.node.height / 2\r\n                            cc.tween(sprite_node)\r\n                                .bezierTo(gameConfig.sprite_move, cc.v2(Tools.getRandom(-500, 500), Tools.getRandom(-500, 500)), cc.v2(Tools.getRandom(-500, 500), Tools.getRandom(-500, 500)), cc.v2(position))\r\n                                .call(() => {\r\n                                    cc.tween(sprite_node)\r\n                                        .by(gameConfig.sprite_jump / 2, {y: 20}, {easing: 'cubicInOut'})\r\n                                        .by(gameConfig.sprite_jump / 2, {y: -20}, {easing: 'cubicInOut'})\r\n                                        .union()\r\n                                        .call(() => {\r\n                                            cc.tween(value.node)\r\n                                                .by(gameConfig.lineShake / 2, {x: -15},)\r\n                                                .by(gameConfig.lineShake / 2, {x: 15},)\r\n                                                .union()\r\n                                                .call(() => {\r\n                                                    sprite_node.active = false\r\n                                                    value.node.active = false\r\n                                                    value.node.destroy()\r\n                                                    resolve(true)\r\n                                                })\r\n                                                .start()\r\n                                        })\r\n                                        .start()\r\n                                })\r\n                                .start()\r\n                        })\r\n                        ps.push(p)\r\n                    }\r\n                })\r\n            }\r\n            if (needDelData.size == 0) {\r\n                this._hint_sprite.active = true\r\n                // Tools.changeGold(gameConfig.price)\r\n                this.scheduleOnce(() => {\r\n                    this._hint_sprite.active = false\r\n                }, gameConfig.hide_hint_sprite)\r\n                return\r\n            }\r\n            CacheMgr.setting.spriteNum--\r\n            CacheMgr.setting = CacheMgr.setting\r\n            // AudioMgr.play(\"sprite_move\")\r\n            this._mask.active = true\r\n            Promise.all(ps).then(() => {\r\n                AudioMgr.play(\"sprite_xiaochu\")\r\n                needDelData.forEach((value, key) => {\r\n                    for (let i = this._lineDatas[key].blockNodes.length - 1; i >= 0; i--) {\r\n                        if (Tools.JudgeValueInArr(i, value)) {\r\n                            this._lineDatas[key].blockNodes.splice(i, 1)\r\n                        }\r\n                    }\r\n                })\r\n                this.updateSprite()\r\n                this.scheduleOnce(() => {\r\n                    this.downAllLine(10)\r\n                }, 0)\r\n                this._mask.active = false\r\n            })\r\n        }\r\n    }\r\n\r\n    private handle_menu() {\r\n        // this._menuPanel.active = !this._menuPanel.active\r\n        if (this._menuPanel.y > this._menu.y) {\r\n            if (this._menuPanel.y != this._menu.y + this._menu.height) {\r\n                return\r\n            }\r\n            tween(this._menuPanel)\r\n                .to(gameConfig.menu_box_move, {y: this._menu.y}, {easing: 'cubicInOut'})\r\n                .call(() => {\r\n\r\n                    this.scheduleOnce(() => {\r\n                        this._menuPanel.active = false\r\n                    })\r\n                })\r\n                .start()\r\n        } else {\r\n            this._menuPanel.active = true\r\n            tween(this._menuPanel)\r\n                .to(gameConfig.menu_box_move, {y: this._menu.y + this._menu.height})\r\n                .start()\r\n        }\r\n    }\r\n\r\n    //重新开始\r\n    private handle_restart() {\r\n        for (let i = 1; i <= 10; i++) {\r\n            let lineData = this._lineDatas[i]\r\n            lineData.blockNodes.forEach((value) => {\r\n                this.returnBlock(value.node)\r\n            })\r\n            lineData.blockNodes = []\r\n        }\r\n        this.continueXiao = 0\r\n        this.allContinueXiao = 0\r\n        this.hardLevel = 1\r\n        this.score = 0\r\n        this.makeBottomBlock(true)\r\n    }\r\n\r\n    //返回首页\r\n    private handle_return() {\r\n        PanelMgr.INS.openPanel({\r\n            panel : HomeView,\r\n            layer : Layer.gameLayer,\r\n            call : ()=>{\r\n                PanelMgr.INS.closePanel(GameView) ;\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    update_hintMask() {\r\n        if (this._hint_mask) {\r\n            this._hint_mask.children[0].x = -this._hint_mask.position.x\r\n            this._hint_mask.children[0].y = -this._hint_mask.position.y\r\n        }\r\n    }\r\n\r\n    hint_play() {\r\n        this._hint_mask.active = true\r\n        this._hint_mask.width = this._lineDatas[10].line.width\r\n        this._hint_mask.height = this._lineDatas[10].line.height * 2\r\n        this._hint_mask.position = this._lineDatas[10].line.position\r\n        for (let i = 9; i <= 10; i++) {\r\n            if (i == 10) {\r\n                this._lineDatas[i].blockNodes.forEach((value) => {\r\n                    let node = value.node\r\n                    node.off(cc.Node.EventType.TOUCH_START, this.handle_block_start, this)\r\n                    node.off(cc.Node.EventType.TOUCH_MOVE, this.handle_block_move, this)\r\n                    node.off(cc.Node.EventType.TOUCH_END, this.handle_block_end, this)\r\n                    node.off(cc.Node.EventType.TOUCH_CANCEL, this.handle_block_end, this)\r\n                })\r\n            } else {\r\n                this._lineDatas[i].blockNodes.forEach((value) => {\r\n                    if (value.column != 6) {\r\n                        let node = value.node\r\n                        node.off(cc.Node.EventType.TOUCH_START, this.handle_block_start, this)\r\n                        node.off(cc.Node.EventType.TOUCH_MOVE, this.handle_block_move, this)\r\n                        node.off(cc.Node.EventType.TOUCH_END, this.handle_block_end, this)\r\n                        node.off(cc.Node.EventType.TOUCH_CANCEL, this.handle_block_end, this)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        // this._hint_label.getComponent(cc.Label).string = \"按住方块，向左拖动1格\"\r\n        this._hint_label.getComponent(cc.Sprite).spriteFrame = this.hint_1_spriteFrame\r\n        this._hint_label.y = this._hint_mask.y + this._hint_mask.height\r\n        this._hint_label.active = true\r\n\r\n        this._hint_hand.active = true\r\n        this._hint_hand.width = gameConfig.gridSize\r\n        this._hint_hand.height = gameConfig.gridSize\r\n        let p = cc.v3(this._lineDatas[9].linePos[6])\r\n        let startWorld = this._lineDatas[9].line.convertToWorldSpaceAR(p)\r\n        let startPosition = this.node.convertToNodeSpaceAR(startWorld)\r\n\r\n        startPosition.x += gameConfig.gridSize / 2\r\n        startPosition.y -= gameConfig.gridSize / 2\r\n\r\n        let p2 = cc.v3(this._lineDatas[9].linePos[5])\r\n        let endWorld = this._lineDatas[9].line.convertToWorldSpaceAR(p2)\r\n        let endPosition = this.node.convertToNodeSpaceAR(endWorld)\r\n        endPosition.y -= gameConfig.gridSize / 2\r\n        this._hint_hand.position = startPosition\r\n        tween(this._hint_hand)\r\n            .to(gameConfig.hint_hand_move, {position: endPosition})\r\n            .to(0, {position: startPosition})\r\n            .union()\r\n            .repeatForever()\r\n            .start()\r\n\r\n        this.update_hintMask()\r\n    }\r\n\r\n    hint_hint() {\r\n        this._hint_mask.width = this._hintUI.width\r\n        this._hint_mask.height = this._hintUI.height\r\n        this._hint_mask.position = this._hintUI.position\r\n        this._hint_hand.active = false\r\n\r\n        // this._hint_label.getComponent(cc.Label).string = \"这里是下一行即将出现的方块（点击空白继续）\"\r\n        this._hint_label.getComponent(cc.Sprite).spriteFrame = this.hint_2_spriteFrame\r\n        this._hint_label.y = this._hint_mask.y + this._hint_mask.height\r\n        this._hint_label.active = true\r\n        this.update_hintMask()\r\n        this.hint_register()\r\n\r\n        CacheMgr.isNeedHint = false\r\n        this._hint_mask.active = false\r\n        this.scheduleOnce(() => {\r\n            tween(this._hint_label)\r\n                .to(1, {opacity: 0})\r\n                .call(() => {\r\n                    this._hint_label.active = false\r\n                })\r\n                .start()\r\n        }, 4)\r\n    }\r\n\r\n    hint_register() {\r\n        this._lineDatas[9].blockNodes.forEach((value) => {\r\n            let block = value.node\r\n            block.on(cc.Node.EventType.TOUCH_START, this.handle_block_start, this)\r\n            block.on(cc.Node.EventType.TOUCH_MOVE, this.handle_block_move, this)\r\n            block.on(cc.Node.EventType.TOUCH_END, this.handle_block_end, this)\r\n            block.on(cc.Node.EventType.TOUCH_CANCEL, this.handle_block_end, this)\r\n        })\r\n    }\r\n\r\n    //重写 gameBoxScroll 滚动方向\r\n    protected gameBoxScrollViewDirection(): string {\r\n        return \"v\"\r\n    }\r\n\r\n}\r\n\r\ninterface lineData {\r\n    line: cc.Node\r\n    linePos: number[]\r\n    blockNodes: blockInfo[]\r\n}\r\n\r\nexport interface nextBlockInfo {\r\n    num: number\r\n    column: number\r\n}\r\n\r\ninterface blockInfo {\r\n    node: cc.Node,\r\n    column: number,\r\n    num: number,\r\n    cover: number[],\r\n    color: number\r\n}\r\n"]}