{"version":3,"sources":["assets\\Script\\Common\\manage\\Api\\QgNative.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Tools from \"../../Tools\";\r\nimport Global from \"../../Global\";\r\nimport LogMgr from \"../../LogMgr\";\r\n\r\nexport default class QgNative {\r\n\r\n    private static nativeAd: any; //原生广告对象\r\n    public static isLoad_Native: boolean = false;\r\n    private static nativeResolve = null ;\r\n    public static nativeMessage : any = null ;\r\n\r\n\r\n    /**\r\n     * 创建原生广告\r\n     */\r\n    public static createNative () {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if (!Global.isVivo) {\r\n                LogMgr.error('当前非vivo平台，无法创建原生广告');\r\n                reject(false) ;\r\n                return\r\n            }\r\n\r\n            let unitId = Tools.getRandomByArray(Global.config.advertisingConfig.nativeAdId);\r\n            if (!unitId) {\r\n                LogMgr.error('原生ID获取失败：' + unitId);\r\n                reject(false) ;\r\n                return\r\n            }\r\n\r\n            // @ts-ignore\r\n            this.nativeAd = qg.createNativeAd({posId : unitId});\r\n\r\n            this.nativeAd.onLoad((res)=>{\r\n                if (res && res.adList) {\r\n                    LogMgr.log('原生广告拉取成功>>>>>>',res.adList) ;\r\n                    this.nativeMessage = res.adList[0] ;\r\n                    this.nativeResolve(res.adList[0]) ;\r\n                    this.isLoad_Native = true ;\r\n                }\r\n                this.nativeResolve = null ;\r\n            })\r\n\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 加载原生广告\r\n     */\r\n    public static loadNative () {\r\n        return new Promise((resolve)=>{\r\n            this.nativeResolve = resolve ;\r\n            if (!this.nativeAd) {\r\n                LogMgr.error('原生广告未创建，无法加载......')\r\n                this.createNative().then(()=>{}).catch() ;\r\n                this.nativeResolve(false) ;\r\n                this.nativeResolve = null ;\r\n                return\r\n            }\r\n\r\n            if (this.nativeMessage != null) {\r\n                this.nativeResolve(this.nativeMessage) ;\r\n                this.nativeResolve = null ;\r\n            }\r\n\r\n            this.nativeAd.load().then(()=>{\r\n\r\n            }).catch(()=>{\r\n                this.nativeResolve(false) ;\r\n            }) ;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 上报原生广告曝光\r\n     */\r\n    public static repAdShow (adId) {\r\n        if (!this.nativeAd) return ;\r\n        LogMgr.log('上报用户曝光>>>>>>')\r\n        this.nativeAd.reportAdShow({\r\n            adId: adId\r\n        }) ;\r\n    }\r\n\r\n    /**\r\n     * 上报原生广告点击\r\n     */\r\n    public static repAdClick (adId) {\r\n        if (!this.nativeAd) return ;\r\n        LogMgr.log('上报用户点击>>>>>>')\r\n        this.nativeAd.reportAdClick({\r\n            adId: adId\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 重新拉去广告信息\r\n     */\r\n    public static anewLoad () {\r\n        this.nativeMessage = null ;\r\n        this.isLoad_Native = false ;\r\n        this.loadNative().then() ;\r\n    }\r\n\r\n}"]}