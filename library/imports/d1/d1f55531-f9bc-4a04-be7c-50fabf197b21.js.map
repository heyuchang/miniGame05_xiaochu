{"version":3,"sources":["assets\\Script\\Common\\manage\\AudioMgr.ts"],"names":[],"mappings":";;;;;;;;;;;;AAIA,2CAAmC;AACnC,uCAAkC;AAClC,qCAAgC;AAEzB,IAAA,OAAO,GAAI,EAAE,CAAC,UAAU,QAAjB,CAAkB;AAGhC;IAAA;IA4CA,CAAC;IA1CG;;OAEG;IACW,kBAAS,GAAvB,UAAwB,MAAa;QAAb,uBAAA,EAAA,aAAa;QACjC,IAAI,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;YACtC,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;SAC9B;aAAM,IAAI,CAAC,MAAM,EAAE;YAChB,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;SAC9B;aAAM,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE;YACzC,iBAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,KAAmB;gBAClD,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACtC,EAAE,CAAC,WAAW,CAAC,cAAc,CAAC,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAEa,aAAI,GAAlB,UAAmB,GAAW,EAAE,GAAe,EAAE,IAAqB;QAAtC,oBAAA,EAAA,OAAe;QAAE,qBAAA,EAAA,YAAqB;QAClE,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,IAAI,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;gBACtC,oBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACzB,OAAO,CAAC,KAAK,CAAC,CAAC;aAClB;YAED,iBAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,KAAmB;gBACjD,IAAI,EAAE,GAAW,CAAC,CAAC;gBACnB,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,GAAG,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACtE,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;gBAC3C,OAAO,CAAC,EAAE,CAAC,CAAC;YAChB,CAAC,CAAC,CAAA;YAEF,yFAAyF;YACzF,iBAAiB;YACjB,0CAA0C;YAC1C,yBAAyB;YACzB,QAAQ;YACR,0BAA0B;YAC1B,6EAA6E;YAC7E,kDAAkD;YAClD,mBAAmB;YACnB,MAAM;QACV,CAAC,CAAC,CAAC;IACP,CAAC;IA3CgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4C5B;IAAD,eAAC;CA5CD,AA4CC,IAAA;kBA5CoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * 音乐管理器\r\n */\r\nimport Global from \"../Global\";\r\nimport GameLog from \"./GameLogMgr\";\r\nimport CacheMgr from \"./CacheMgr\";\r\nimport LoadMgr from \"./LoadMgr\";\r\n\r\nconst {ccclass} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AudioMgr {\r\n\r\n    /**\r\n     * @param isStop\r\n     */\r\n    public static backMusic(isStop = true) {\r\n        if (CacheMgr.setting.setting.music === 0) {\r\n            cc.audioEngine.stopMusic();\r\n        } else if (!isStop) {\r\n            cc.audioEngine.stopMusic();\r\n        } else if (!cc.audioEngine.isMusicPlaying()) {\r\n            LoadMgr.load_AudioClip(\"bg\").then((audio: cc.AudioClip) => {\r\n                cc.audioEngine.playMusic(audio, true);\r\n                cc.audioEngine.setMusicVolume(CacheMgr.setting.setting.music);\r\n            });\r\n        }\r\n    }\r\n\r\n    public static play(url: string, max: number = 1, loop: boolean = false) {\r\n        return new Promise((resolve, reject) => {\r\n            if (CacheMgr.setting.setting.audio === 0) {\r\n                GameLog.warn(\" 当前音量静音 \");\r\n                resolve(false);\r\n            }\r\n\r\n            LoadMgr.load_AudioClip(url).then((audio: cc.AudioClip) => {\r\n                let id: number = 0;\r\n                cc.audioEngine.setEffectsVolume(max * CacheMgr.setting.setting.audio);\r\n                id = cc.audioEngine.playEffect(audio, loop)\r\n                resolve(id);\r\n            })\r\n\r\n            // Global.bundleList.audio.load(url, cc.AudioClip, (err: Error, audio: cc.AudioClip) => {\r\n            //     if (err) {\r\n            //         GameLog.error(' 音效播放错误 ', url);\r\n            //         reject(false);\r\n            //     }\r\n            //     let id: number = 0;\r\n            //     cc.audioEngine.setEffectsVolume(max * CacheMgr.setting.setting.audio);\r\n            //     id = cc.audioEngine.playEffect(audio, loop)\r\n            //     resolve(id);\r\n            // });\r\n        });\r\n    }\r\n}\r\n"]}