{"version":3,"sources":["assets\\Script\\Common\\manage\\Emit\\EmitBase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,MAAM;AACN,4CAAoC;AAGpC;IAAsC,4BAAc;IAApD;;IAuFA,CAAC;IAtFG;;;;;;OAMG;IACI,qBAAE,GAAT,UAA8B,IAAqB,EAAE,OAAU,EAAE,MAAW,EAAE,UAAoB;QAC9F,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YACjC,oBAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACjE,OAAO;SACV;QACD,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;YACzB,OAAO,iBAAM,EAAE,YAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;SACrD;aAAM;YACH,OAAO,iBAAM,EAAE,YAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,CAAC,CAAA;SAChE;IACL,CAAC;IAED;;;;OAIG;IACI,uBAAI,GAAX,UAAY,IAAqB,EAAE,OAA6E,EAAE,MAAY;QAC1H,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAClB,oBAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACjE,OAAO;SACV;QAED,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;YACzB,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAC5C;aAAM;YACH,OAAO,iBAAM,IAAI,YAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACvD;IAEL,CAAC;IAGD;;;;;OAKG;IACI,sBAAG,GAAV,UAAW,IAAqB,EAAE,OAAiB,EAAE,MAAW;QAC5D,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAClB,oBAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;YACjE,OAAO;SACV;QAED,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;YACzB,OAAO,iBAAM,GAAG,YAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAC3C;aAAM;YACH,OAAO,iBAAM,GAAG,YAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SACtD;IACL,CAAC;IAED;;;OAGG;IACI,4BAAS,GAAhB,UAAiB,MAAW;QACxB,IAAI,CAAC,MAAM,EAAE;YACT,oBAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;YAC5C,OAAO;SACV;QACD,OAAO,iBAAM,SAAS,YAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED;;;;;;;;OAQG;IACI,uBAAI,GAAX,UAAY,IAAqB,EAAE,IAAU,EAAE,IAAU,EAAE,IAAU,EAAE,IAAU,EAAE,IAAU;QACzF,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;YACzB,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SACxD;aAAM;YACH,OAAO,iBAAM,IAAI,YAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SACnE;IACL,CAAC;IACL,eAAC;AAAD,CAvFA,AAuFC,CAvFqC,EAAE,CAAC,WAAW,GAuFnD","file":"","sourceRoot":"/","sourcesContent":["//事件派发\r\nimport GameLog from \"../GameLogMgr\";\r\nimport isNumber = cc.js.isNumber;\r\n\r\nexport default class EmitBase extends cc.EventTarget {\r\n    /**\r\n     *\r\n     * @param type\r\n     * @param handler\r\n     * @param target\r\n     * @param useCapture\r\n     */\r\n    public on<T extends Function>(type: string | number, handler: T, target: any, useCapture?: boolean): T {\r\n        if ((!type && type != 0) || !target) {\r\n            GameLog.error(\"事件对象|类型为空===> type = \", type, \"target =\", target);\r\n            return;\r\n        }\r\n        if (typeof type == \"string\") {\r\n            return super.on(type, handler, target, useCapture)\r\n        } else {\r\n            return super.on(type.toString(), handler, target, useCapture)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param type\r\n     * @param handler\r\n     * @param target\r\n     */\r\n    public once(type: string | number, handler: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void, target?: any): void {\r\n        if (!type || !target) {\r\n            GameLog.error(\"事件对象|类型为空===> type = \", type, \"target =\", target);\r\n            return;\r\n        }\r\n\r\n        if (typeof type == \"string\") {\r\n            return super.once(type, handler, target);\r\n        } else {\r\n            return super.once(type.toString(), handler, target);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param type\r\n     * @param handler\r\n     * @param target\r\n     */\r\n    public off(type: string | number, handler: Function, target: any): void {\r\n        if (!type || !target) {\r\n            GameLog.error(\"事件对象|类型为空===> type = \", type, \"target =\", target);\r\n            return;\r\n        }\r\n\r\n        if (typeof type == \"string\") {\r\n            return super.off(type, handler, target);\r\n        } else {\r\n            return super.off(type.toString(), handler, target);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param target\r\n     */\r\n    public targetOff(target: any) {\r\n        if (!target) {\r\n            GameLog.error(\"事件对象===>  target =\", target);\r\n            return;\r\n        }\r\n        return super.targetOff(target);\r\n    }\r\n\r\n    /**\r\n     * 派发事件\r\n     * @param type  事件类型\r\n     * @param arg1\r\n     * @param arg2\r\n     * @param arg3\r\n     * @param arg4\r\n     * @param arg5\r\n     */\r\n    public emit(type: string | number, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any): void {\r\n        if (typeof type == \"string\") {\r\n            return super.emit(type, arg1, arg2, arg3, arg4, arg5)\r\n        } else {\r\n            return super.emit(type.toString(), arg1, arg2, arg3, arg4, arg5)\r\n        }\r\n    }\r\n}\r\n"]}