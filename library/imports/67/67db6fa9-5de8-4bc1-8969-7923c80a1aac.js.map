{"version":3,"sources":["assets\\Script\\Moudle\\View\\EndView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import HomeView from \"./HomeView\";\r\nimport LayerPanel, {UrlInfo} from \"../../Common/manage/Layer/LayerPanel\";\r\nimport CacheMgr from \"../../Common/manage/CacheMgr\";\r\nimport GameView from \"./GameView\";\r\nimport LayerMgr from \"../../Common/manage/Layer/LayerMgr\";\r\nimport AudioMgr from \"../../Common/manage/AudioMgr\";\r\nimport PanelMgr, {Layer} from \"../../Common/manage/PanelMgr\";\r\nimport ShowConfig from \"../../Common/ShowConfig\";\r\nimport Global from \"../../Common/Global\";\r\nimport QgBanner from \"../../Common/manage/Api/QgBanner\";\r\nimport Emit from \"../../Common/manage/Emit/Emit\";\r\nimport EmitData from \"../../Common/manage/Emit/EmitData\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class EndView extends LayerPanel {\r\n    public static getUrl(): UrlInfo {\r\n        return {\r\n            bundle: \"endView\",\r\n            name: \"endView\"\r\n        }\r\n    }\r\n\r\n    private _paramData: any = {};\r\n\r\n    private _button: cc.Node = null;\r\n    @property(cc.Prefab)\r\n    private coinPrefab: cc.Prefab = null\r\n    coinPool: cc.NodePool = null;  //星星对象金币对象池\r\n    getGold: cc.Node = null\r\n    getScore: cc.Node = null\r\n    gameBox: cc.Node = null\r\n    maxScore: cc.Node = null\r\n    newMax: cc.Node = null\r\n    caiDai: cc.Node = null\r\n    home_btn: cc.Node = null\r\n    game_btn: cc.Node = null\r\n    isNewMax: boolean = false\r\n    score: number = null\r\n\r\n    public initUI() {\r\n        //todo logic\r\n        this.getGold = this.getNode(\"topUi/huodejinbi/getGlod\")\r\n        this.gameBox = this.getNode(\"gameBox\")\r\n        this.getScore = this.getNode(\"topUi/getNum\")\r\n        this.maxScore = this.getNode(\"history/history_num\")\r\n        this.newMax = this.getNode(\"xinjilu\")\r\n        this.caiDai = this.getNode(\"caidai\")\r\n        this.game_btn = this.getNode(\"bottomUI/continue\")\r\n        this.onTouch(this.game_btn, this.handle_continue)\r\n        this.home_btn = this.getNode(\"bottomUI/home\")\r\n        this.onTouch(this.home_btn, this.handle_home)\r\n        this.coinPool = new cc.NodePool();\r\n        this.initCoinPool();\r\n    }\r\n\r\n    public show(param: any) {\r\n        //todo 逻辑\r\n        this.isNewMax = param.isNewMax;\r\n        this.getScore.getComponent(cc.Label).string = param.score;\r\n        this.getGold.getComponent(cc.Label).string = \"+\" + param.score;\r\n        this.score = Number(param.score);\r\n        this.maxScore.getComponent(cc.Label).string = CacheMgr.checkpoint.toString();\r\n\r\n\r\n        ShowConfig.show('endConfig').then((res) => {\r\n            if (Global.config.endConfig.bannerShow == 1) {\r\n                QgBanner.showBanner();\r\n            } else {\r\n                QgBanner.hideBanner();\r\n            }\r\n        });\r\n    }\r\n\r\n    public hide() {\r\n        CacheMgr.updateData();\r\n        if (Global.config.gameConfig.nativeConfig.type == 2) {\r\n            Emit.instance().emit(EmitData.CLOSE_NATIVE) ;\r\n        }\r\n    }\r\n\r\n    //todo logic 方法\r\n    /** 初始化金币对象池 */\r\n    initCoinPool(count: number = 20) {\r\n        for (let i = 0; i < count; i++) {\r\n            let coin = cc.instantiate(this.coinPrefab);\r\n            this.coinPool.put(coin);\r\n        }\r\n    }\r\n\r\n    /** 播放动画 */\r\n    playAnim() {\r\n        AudioMgr.play(\"get_coins\")\r\n\r\n        /** 随机金币数量 */\r\n        let randomCount = Math.random() * 15 + 10;\r\n        /** 起始位置 */\r\n        let startPos = this.node.convertToNodeSpaceAR(this.getGold.parent.parent.convertToWorldSpaceAR(this.getGold.parent.position))\r\n\r\n        /** 结束位置 */\r\n        let endPos = LayerMgr.gameInfoLayer.children[0].children[0].position\r\n        this.playCoinFlyAnim(randomCount, cc.v2(startPos), cc.v2(endPos));\r\n    }\r\n\r\n    /**\r\n     * 播放金币飞出动画\r\n     * @param count 金币数量\r\n     * @param startPos 起始位置\r\n     * @param endPos 结束位置\r\n     * @param r 半径\r\n     */\r\n    playCoinFlyAnim(count: number, startPos: cc.Vec2, endPos: cc.Vec2, r: number = 200) {\r\n        //确保当前节点池有足够的金币\r\n        const poolSize = this.coinPool.size();\r\n        const reCreateCoinCount = poolSize > count ? 0 : count - poolSize;\r\n        this.initCoinPool(reCreateCoinCount);\r\n        //生成园， 并且对圆上的点进行排序\r\n        let points = this.getCirclePoints(r, startPos, count);\r\n        let coinNodeList = points.map(pos => {\r\n            let coin = this.coinPool.get();\r\n            coin.setPosition(startPos);\r\n            this.node.addChild(coin);\r\n            return {\r\n                node: coin,\r\n                startPos: startPos,\r\n                mdPos: pos,\r\n                endPos: endPos,\r\n                /** sub 用于把字符串显示为下标 */\r\n                dis: (pos as any).sub(endPos).mag()\r\n            };\r\n        });\r\n        coinNodeList = coinNodeList.sort((a, b) => {\r\n            if (a.dis - b.dis > 0) return 1;\r\n            if (a.dis - b.dis < 0) return -1;\r\n            return 0;\r\n        })\r\n\r\n        //执行金币落袋的动画\r\n        coinNodeList.forEach((item, index) => {\r\n            item.node.runAction(\r\n                cc.sequence(\r\n                    cc.moveTo(0.3, item.mdPos),\r\n                    cc.delayTime(index * 0.01),\r\n                    cc.moveTo(0.5, item.endPos),\r\n                    cc.callFunc(() => {\r\n                        this.coinPool.put(item.node);\r\n                    })\r\n                )\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param r 半径\r\n     * @param pos 圆心坐标\r\n     * @param count 等分点数量\r\n     * @param randomScope 等分点的随机播动范围\r\n     */\r\n    getCirclePoints(r: number, pos: cc.Vec2, count: number, randomScope: number = 60): cc.Vec2[] {\r\n        let points = [];\r\n        //弧度\r\n        let radians = (Math.PI / 180) * Math.round(360 / count);\r\n        for (let i = 0; i < count; i++) {\r\n            let x = pos.x + r * Math.sin(radians * i);\r\n            let y = pos.y + r * Math.cos(radians * i);\r\n            points.unshift(cc.v3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));\r\n        }\r\n        return points;\r\n    }\r\n\r\n\r\n    handle_home() {\r\n        PanelMgr.INS.openPanel({\r\n            panel : HomeView,\r\n            layer : Layer.gameLayer,\r\n            call : ()=>{\r\n                PanelMgr.INS.closePanel(EndView) ;\r\n            }\r\n        })\r\n    }\r\n\r\n    handle_continue() {\r\n        PanelMgr.INS.openPanel({\r\n            panel : GameView,\r\n            layer : Layer.gameLayer,\r\n            call : ()=>{\r\n                PanelMgr.INS.closePanel(EndView) ;\r\n            }\r\n        })\r\n    }\r\n}\r\n"]}