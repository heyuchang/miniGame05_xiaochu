{"version":3,"sources":["assets\\Script\\Common\\manage\\Api\\QgBanner.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Game from \"../../../Scene/Game\";\r\nimport Tools from \"../../Tools\";\r\nimport Global from \"../../Global\";\r\nimport LogMgr from \"../../LogMgr\";\r\n\r\nexport default class QgBanner {\r\n\r\n    public static isLoad: boolean = false; //加载状态\r\n\r\n    private static bannerAd: any; //banner对象\r\n\r\n    public static isShow: boolean = false; //显示状态\r\n\r\n    /**\r\n     * 创建banner\r\n     */\r\n    public static createBanner() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if (!Global.isVivo) {\r\n                LogMgr.error('当前非vivo平台，无法创建Banner');\r\n                reject(false);\r\n                return\r\n            }\r\n\r\n            let unitId = Tools.getRandomByArray(Global.config.advertisingConfig.bannerAdId);\r\n            if (!unitId) {\r\n                LogMgr.error('BannerId获取失败:' + unitId);\r\n                reject(false);\r\n                return\r\n            }\r\n\r\n            let banner_exm = Game.Ins.banner\r\n            let size = Tools.getRealSize(banner_exm)\r\n            let refreshTime = 30 ;\r\n\r\n            if (Global.config.bannerRefreshTime >= 30) {\r\n                refreshTime = Global.config.bannerRefreshTime ;\r\n            }\r\n\r\n            let bannerParam = {\r\n                adUnitId: unitId,\r\n                style: {\r\n                    left: size.left,\r\n                    top: size.top,\r\n                },\r\n                adIntervals: refreshTime,\r\n            };\r\n\r\n            // @ts-ignore\r\n            this.bannerAd = qg.createBannerAd(bannerParam);\r\n\r\n            this.bannerAd.onLoad((res) => {\r\n                this.isLoad = true;\r\n                LogMgr.log('Banner广告加载完成-onload触发', JSON.stringify(res));\r\n                resolve(true);\r\n            })\r\n\r\n            this.bannerAd.onClose(()=>{\r\n                LogMgr.log('Banner关闭......')\r\n            })\r\n\r\n            this.bannerAd.onError((err) => {\r\n                LogMgr.error('Banner错误:err:', err);\r\n                reject(false);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    /**\r\n     *展示Banner\r\n     */\r\n    public static showBanner() {\r\n\r\n        if (!this.isLoad) {\r\n            this.createBanner().then();\r\n            LogMgr.error('Banner未创建或未加载，无法显示')\r\n            return\r\n        }\r\n\r\n        if (this.isShow) {\r\n            LogMgr.error('Banner已显示，无法重复显示') ;\r\n            return\r\n        }\r\n\r\n        this.bannerAd.show().then(() => {\r\n            this.isShow = true;\r\n        }).catch((err) => {\r\n            LogMgr.error('Banner显示错误:', err);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * 隐藏Banner\r\n     */\r\n    public static hideBanner() {\r\n        if (!this.isLoad) {\r\n            LogMgr.error('Banner未创建或未加载，无法隐藏')\r\n            return\r\n        }\r\n\r\n        if (!this.isShow) {\r\n            LogMgr.error('Banner未显示，无需隐藏')\r\n            return\r\n        }\r\n\r\n        this.bannerAd.hide();\r\n        this.isShow = false;\r\n    }\r\n\r\n    /**\r\n     * 销毁Banner实例\r\n     */\r\n    public static destroyBanner() {\r\n        return new Promise((resolve) => {\r\n            if (!this.bannerAd) {\r\n                LogMgr.error('Banner未创建>>>无法destroy()');\r\n                resolve(false);\r\n                return\r\n            }\r\n\r\n            this.bannerAd.destroy();\r\n            this.isLoad = false;\r\n            this.isShow = false;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 刷新Banner\r\n     */\r\n    public static cutBanner() {\r\n        return new Promise((resolve) => {\r\n            this.destroyBanner().then((res) => {\r\n                if (res) {\r\n                    this.createBanner().then(()=>{\r\n                        this.showBanner();\r\n                    });\r\n                }\r\n                resolve(true);\r\n            })\r\n        })\r\n    }\r\n\r\n}"]}